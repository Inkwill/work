(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    213081,       3986]
NotebookOptionsPosition[    208972,       3909]
NotebookOutlinePosition[    209435,       3927]
CellTagsIndexPosition[    209392,       3924]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\:57fa\:790e\:5eab :", "Affiliation",
 CellChangeTimes->{{3.80863150141825*^9, 3.808631525264674*^9}, {
   3.8086315562330017`*^9, 3.8086316631809683`*^9}, {3.808631707500058*^9, 
   3.808631723192139*^9}, {3.808718979445756*^9, 3.808718982388147*^9}, 
   3.808825384561846*^9, {3.831589266409813*^9, 
   3.83158926656102*^9}},ExpressionUUID->"68931959-5198-403f-8f48-\
7da78c592e79"],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$UserDocumentsDirectory", ",", "\"\<Wolfram Mathematica\>\"", ",", 
      "\"\<snslib.wl\>\""}], "}"}], "]"}], ")"}]}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.8086317303915777`*^9, 3.8086317690638633`*^9}, {
   3.831589414714744*^9, 3.831589415705814*^9}, 3.8315895207702093`*^9, {
   3.8317784690495186`*^9, 3.83177846916679*^9}, 3.833322799213958*^9, {
   3.8346305929764843`*^9, 3.834630593478876*^9}, {3.8346306476551957`*^9, 
   3.834630653175108*^9}, {3.83463131716232*^9, 3.8346313687828426`*^9}, {
   3.83463191383171*^9, 3.8346319148797407`*^9}, {3.8346320415423517`*^9, 
   3.834632043662016*^9}, {3.8346322038712053`*^9, 3.8346322082375574`*^9}, {
   3.834632453999045*^9, 3.8346325479653864`*^9}, {3.8347060221245103`*^9, 
   3.8347060717771616`*^9}, 3.834706141600541*^9, {3.8347062236563067`*^9, 
   3.8347062823406115`*^9}, {3.8347065525789022`*^9, 
   3.8347065553074923`*^9}, {3.8347065988208632`*^9, 3.83470663060217*^9}, {
   3.834706959258179*^9, 3.8347069638017364`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"5d8076fb-28eb-40a2-aa1d-d7d3d9da2897"],

Cell["WorkPath : ", "Affiliation",
 CellChangeTimes->{{3.808632707662116*^9, 
  3.808632736073278*^9}},ExpressionUUID->"a2a0f4da-9391-44ab-9818-\
2c84b253e65d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\<D:\\\\Work\\\\SSR\\\\basePlan\>\"", "]"}],
   ";"}], "\n", 
 RowBox[{"dataPath", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", "]"}], ",", "\"\<_data\>\""}], "}"}], 
   "]"}]}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.8086327405274706`*^9, 3.808632783590748*^9}, 
   3.8099431492973995`*^9, 3.8315892962849655`*^9, {3.8327129450376797`*^9, 
   3.832712945171708*^9}, {3.8333225613968163`*^9, 3.833322593147788*^9}, {
   3.833322766379083*^9, 3.833322766828389*^9}, {3.833323326236969*^9, 
   3.8333233278660526`*^9}, {3.8333233627418385`*^9, 
   3.8333234284743204`*^9}, {3.8333235195876565`*^9, 3.833323583682678*^9}, {
   3.8333236699558153`*^9, 3.8333236716599092`*^9}, {3.8333237468767853`*^9, 
   3.8333237476354647`*^9}, {3.8333237864278183`*^9, 
   3.8333239469144335`*^9}, {3.8333241038115463`*^9, 3.833324137714832*^9}, {
   3.8333241748494864`*^9, 3.8333242059614353`*^9}, {3.833324246882882*^9, 
   3.8333242680347877`*^9}, {3.833324514585741*^9, 3.8333245532823553`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"40d8d0d1-5b64-4fda-9c6f-43838140d950"],

Cell[BoxData["\<\"D:\\\\Work\\\\SSR\\\\_data\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBuInJfkPOvrfOFqKKz28AqSZKr3fgOiJzQpy2hPeOJrn
bxeqA9I/10x7dAZIHzIP/fMNSAfe+hO1bOIbx6zvC/1+AulLT2e//gWkQ8LO
fADRdw1amX4D6eWqNmog+lzuFmMQPWHXnDYQ3fIn8A2I3vSjnUl+0htHxS8R
yiC6YCO/H4iOmdLZC6IPFahPh/ANVoNoh64XG0F0u2DDZxD9Zsl+XmUgHXns
92M3kDr12etmT3vjGLR6yREQHWB1XLBv+htHiyjOSRNmvHHc13lh6hQgLTb3
6LupQNp74k3laUD6xzKm80Yz3zg6c0R+XT3vjeOGj+qCa4D0Addz0502vnHU
eP7xJYjm4Lz5CUSvc/4yPQdIL+A/sTcXSC/7+/DxGyD96dLnKtFNbxwBLa/B
wQ==
  "],
 CellLabel->"Out[3]=",ExpressionUUID->"3c1064e8-9b8b-466d-99b6-89d90a7f21c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6570\:503c\:5c3a\:5ea6", "Section",
 CellChangeTimes->{
  3.808631677265349*^9, {3.80869332707485*^9, 3.808693330648262*^9}, {
   3.8087189665087495`*^9, 3.808718967733144*^9}, {3.833960167790538*^9, 
   3.833960169137002*^9}, {3.834023624697265*^9, 3.834023664681054*^9}, {
   3.8340250206769943`*^9, 3.834025026350839*^9}, {3.834028677224286*^9, 
   3.834028678461182*^9}, {3.8510435900065002`*^9, 
   3.85104359246415*^9}},ExpressionUUID->"2ab2737c-7744-467c-a547-\
4d2efe5a5f3b"],

Cell["\<\
\:4ee4\:ff1aTv(res)\:4e0eTv(Lv)*lv\:6210\:53cd\:6bd4
Tv(res) =  tvPara / (Lv * Tv(Lv))\
\>", "Affiliation",
 CellChangeTimes->{{3.808633042792246*^9, 3.8086331084863987`*^9}, {
   3.808719028342112*^9, 3.8087190415453496`*^9}, {3.80878913282475*^9, 
   3.808789133464386*^9}, {3.8087940766025524`*^9, 3.8087941058362556`*^9}, {
   3.8340235613002286`*^9, 3.8340236090069103`*^9}, {3.8340236677878056`*^9, 
   3.8340236697927933`*^9}, 3.834025031631636*^9, {3.8340285143773403`*^9, 
   3.8340285194936504`*^9}, 3.8340286355365624`*^9, {3.8340286717436066`*^9, 
   3.8340287231513677`*^9}, 3.8340292587694736`*^9, {3.834031070094565*^9, 
   3.834031093038456*^9}, {3.8340454091905107`*^9, 3.834045480554221*^9}, {
   3.8340456944288187`*^9, 3.8340457161969275`*^9}, {3.851031943258831*^9, 
   3.851031955183136*^9}, {3.851032036567172*^9, 3.8510320390398498`*^9}, 
   3.8510421847780113`*^9, {3.851048781669001*^9, 3.8510488283396397`*^9}, {
   3.8510516151723223`*^9, 3.8510516260686016`*^9}, 3.851055294360161*^9, {
   3.8510554524160714`*^9, 
   3.8510554570158625`*^9}},ExpressionUUID->"7c6e7bb4-2be5-4f3d-aca3-\
d318ea8712ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "resconfig", ",", "bdNum", ",", "tvPara", ",", "resSpeed", ",", 
    "resByLv"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"resconfig", " ", "=", " ", 
   RowBox[{"Base`excleData", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directory", "[", "]"}], ",", "\"\<main.xlsx\>\""}], "}"}], 
      "]"}], ",", "\"\<resource\>\"", ",", "\"\<base\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bdNum", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"FirstPosition", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"productconfig", "[", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{
            RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
          "\"\<build\>\""}], "]"}], "]"}], ",", 
       RowBox[{"n_", "/;", 
        RowBox[{"lv", "<", "n"}]}], ",", 
       RowBox[{"{", "5", "}"}]}], "]"}], "]"}], "-", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tvPara", "[", "type_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"getDayByLv", "[", "maxLv", "]"}], "*", 
    RowBox[{"maxLv", "/", 
     RowBox[{"(", 
      RowBox[{"10000", "*", 
       RowBox[{"resconfig", "[", 
        RowBox[{
         RowBox[{"SelectFirst", "[", 
          RowBox[{
           RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
         "\"\<total\>\""}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"resSpeed", "[", 
     RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"step", "=", 
        RowBox[{"funcsLTStep", "/.", 
         RowBox[{"Private`x", "\[Rule]", "lv"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"getDayByLv", "[", 
           RowBox[{"lv", "+", "1"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"lv", "+", "1"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"getDayByLv", "[", "lv", "]"}], "*", "lv"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"tvPara", "[", "type", "]"}], "*", "step"}], ")"}]}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resByLv", "[", 
    RowBox[{"type_", ",", "lv_Integer"}], "]"}], ":=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"resSpeed", "[", 
        RowBox[{"type", ",", "n"}], "]"}], "*", "funcsLTStep"}], "/.", 
      RowBox[{"Private`x", "\[Rule]", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"lv", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resByLv", "[", 
    RowBox[{"type_", ",", "lv_Real"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"resByLv", "[", 
     RowBox[{"type", ",", 
      RowBox[{"IntegerPart", "@", "lv"}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"resByLv", "[", 
        RowBox[{"type", ",", 
         RowBox[{
          RowBox[{"IntegerPart", "@", "lv"}], "+", "1"}]}], "]"}], "-", 
       RowBox[{"resByLv", "[", 
        RowBox[{"type", ",", 
         RowBox[{"IntegerPart", "@", "lv"}]}], "]"}]}], ")"}], "*", 
     RowBox[{"FractionalPart", "@", "lv"}]}]}]}], ";"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.8086321191192493`*^9, 3.8086321229284706`*^9}, {
   3.808650966346627*^9, 3.808651027259164*^9}, {3.8086552496278596`*^9, 
   3.8086552898557644`*^9}, {3.80865537466228*^9, 3.808655432070145*^9}, {
   3.808655475568187*^9, 3.808655499291773*^9}, {3.8086555458233986`*^9, 
   3.8086555470780134`*^9}, {3.808655592329652*^9, 3.8086556007401743`*^9}, {
   3.808655695441067*^9, 3.8086557544796934`*^9}, {3.8086558038377166`*^9, 
   3.808655838970436*^9}, {3.808655972399808*^9, 3.8086560475529747`*^9}, {
   3.808656126757228*^9, 3.8086561550829725`*^9}, {3.8086561853400106`*^9, 
   3.808656208164997*^9}, {3.808656294727317*^9, 3.808656315726019*^9}, {
   3.8086563601291018`*^9, 3.8086563670051336`*^9}, {3.808656402343069*^9, 
   3.8086564422063446`*^9}, {3.80865647256328*^9, 3.8086565039427433`*^9}, 
   3.808693943142417*^9, 3.8086939812742405`*^9, {3.8086941292264895`*^9, 
   3.8086941557148285`*^9}, 3.808694789403946*^9, {3.8086948771999826`*^9, 
   3.8086949488136897`*^9}, {3.8086950060734615`*^9, 3.808695028325946*^9}, {
   3.8086951385725393`*^9, 3.8086951498989315`*^9}, {3.8086957871964264`*^9, 
   3.8086958013317766`*^9}, {3.808695880875601*^9, 3.8086958893147945`*^9}, {
   3.8087150097141085`*^9, 3.8087151161769676`*^9}, {3.808715458109768*^9, 
   3.808715535392779*^9}, {3.8087155814522476`*^9, 3.8087155987644787`*^9}, {
   3.8087163438570256`*^9, 3.808716403476448*^9}, {3.8087167678683624`*^9, 
   3.8087169939172115`*^9}, {3.8087186170036573`*^9, 3.808718633111721*^9}, 
   3.808734826202589*^9, 3.808734905516019*^9, {3.808735034704901*^9, 
   3.808735047274339*^9}, {3.8087357144577036`*^9, 3.8087357585315804`*^9}, {
   3.8087358720045915`*^9, 3.808735876612048*^9}, {3.8087361042341127`*^9, 
   3.8087361056867275`*^9}, {3.8087362364854217`*^9, 3.808736236865576*^9}, 
   3.808736814246451*^9, {3.808736871962551*^9, 3.8087368832489142`*^9}, {
   3.8087824541772947`*^9, 3.808782511253625*^9}, 3.8087825441370564`*^9, {
   3.808782672963166*^9, 3.8087827019682374`*^9}, {3.8087828822104807`*^9, 
   3.808782967618992*^9}, {3.8087830143540063`*^9, 3.8087830262921753`*^9}, {
   3.8087830950311084`*^9, 3.8087831237733526`*^9}, {3.808783163152711*^9, 
   3.8087832349264655`*^9}, {3.808783274135768*^9, 3.808783276407037*^9}, {
   3.8087834177388306`*^9, 3.8087834305390196`*^9}, {3.8087835748694572`*^9, 
   3.8087835988112836`*^9}, {3.808783693884592*^9, 3.808783694240699*^9}, {
   3.808783757819089*^9, 3.808783761486614*^9}, {3.808784187708847*^9, 
   3.8087842823208647`*^9}, {3.808784396701518*^9, 3.808784434559076*^9}, {
   3.8087860534784064`*^9, 3.8087861892518363`*^9}, 3.80878631748376*^9, {
   3.8087863617633*^9, 3.8087863773516455`*^9}, {3.808786966175229*^9, 
   3.8087870343976316`*^9}, {3.808787162230459*^9, 3.808787184186225*^9}, {
   3.8087872706611805`*^9, 3.808787271630118*^9}, {3.8087878049869404`*^9, 
   3.8087878064011087`*^9}, {3.808787877410733*^9, 3.80878792222486*^9}, 
   3.8087882749203253`*^9, {3.808788682638295*^9, 3.8087886892430906`*^9}, {
   3.808788813989341*^9, 3.808788861154708*^9}, {3.8087889386138163`*^9, 
   3.8087889460344505`*^9}, {3.8087889767235775`*^9, 
   3.8087889908657455`*^9}, {3.8087890237011805`*^9, 
   3.8087890246578636`*^9}, {3.8087892753318157`*^9, 
   3.8087892937379475`*^9}, {3.808794113351554*^9, 3.808794115070833*^9}, {
   3.8087950063266764`*^9, 3.808795140372967*^9}, {3.8087973153549423`*^9, 
   3.808797363577663*^9}, {3.808797517047597*^9, 3.8087975173107147`*^9}, 
   3.8087975600950856`*^9, {3.80879771359706*^9, 3.8087977185001793`*^9}, {
   3.808797833497653*^9, 3.808797833816798*^9}, 3.8087984176579385`*^9, {
   3.8087985412618732`*^9, 3.8087985449656477`*^9}, {3.8087986205270667`*^9, 
   3.8087986326049337`*^9}, {3.8087987138967123`*^9, 
   3.8087987198139687`*^9}, {3.808799485451124*^9, 3.8087995298233404`*^9}, {
   3.8087996988355837`*^9, 3.80879971621819*^9}, {3.808800018794944*^9, 
   3.8088000418664613`*^9}, {3.8088032703790617`*^9, 3.8088032743211412`*^9},
    {3.8088033107700768`*^9, 3.80880335916182*^9}, {3.8088036696407137`*^9, 
   3.8088037177743144`*^9}, {3.808803889874916*^9, 3.8088038901112504`*^9}, {
   3.8088041341127057`*^9, 3.8088041342563257`*^9}, {3.808804860542604*^9, 
   3.8088048878019075`*^9}, {3.8091477426832285`*^9, 
   3.8091477875926867`*^9}, {3.8130210923923683`*^9, 
   3.8130210971355553`*^9}, {3.813021134698643*^9, 3.8130211360926027`*^9}, 
   3.813021276644721*^9, 3.813021798109539*^9, {3.8130226391712265`*^9, 
   3.8130226392888823`*^9}, {3.813032888145892*^9, 3.813032888788127*^9}, {
   3.8315896741397753`*^9, 3.8315896985456686`*^9}, {3.8315897307541275`*^9, 
   3.8315897347637963`*^9}, {3.831589902075383*^9, 3.831589928994995*^9}, {
   3.8315900263145123`*^9, 3.8315900372963295`*^9}, {3.83159007364235*^9, 
   3.8315901868170757`*^9}, {3.831590267828146*^9, 3.831590311626197*^9}, {
   3.831765149685164*^9, 3.831765150013067*^9}, {3.83177598734519*^9, 
   3.8317760029776487`*^9}, {3.8317760651051607`*^9, 
   3.8317760731046853`*^9}, {3.8317763096165857`*^9, 3.831776310840356*^9}, {
   3.831776372269432*^9, 3.8317763961600513`*^9}, {3.831776502841998*^9, 
   3.8317765035137653`*^9}, {3.8317785300165915`*^9, 3.8317785367754393`*^9}, 
   3.831780980067283*^9, {3.8321426291906977`*^9, 3.8321426511263604`*^9}, {
   3.8321444626609745`*^9, 3.832144514683178*^9}, {3.832195314259512*^9, 
   3.8321953485228767`*^9}, {3.83219538353137*^9, 3.8321954035794845`*^9}, {
   3.8321954547329693`*^9, 3.832195471829215*^9}, {3.832195561836808*^9, 
   3.832195595299019*^9}, 3.832196181605626*^9, {3.832196473634031*^9, 
   3.8321965248585644`*^9}, {3.832197397030918*^9, 3.8321973989227858`*^9}, {
   3.8321975336605663`*^9, 3.8321975384648385`*^9}, {3.8321976423013983`*^9, 
   3.832197644026271*^9}, {3.832197725926578*^9, 3.8321977285457506`*^9}, 
   3.832197781597249*^9, {3.8321979671080832`*^9, 3.8321979686330786`*^9}, 
   3.8322010377149954`*^9, {3.832201078482271*^9, 3.8322011489054117`*^9}, 
   3.8322011844020615`*^9, {3.83220127275482*^9, 3.832201324626897*^9}, 
   3.832201374168996*^9, {3.8322021362040243`*^9, 3.8322021468577595`*^9}, 
   3.832202223115119*^9, {3.8322023251911855`*^9, 3.832202325336165*^9}, {
   3.8322089574801674`*^9, 3.8322090043690486`*^9}, {3.8322090893931055`*^9, 
   3.8322090926701903`*^9}, {3.832209209944267*^9, 3.832209210046615*^9}, {
   3.8322094605132256`*^9, 3.8322094615604696`*^9}, {3.832209675127907*^9, 
   3.832209675366907*^9}, {3.8328012249525585`*^9, 3.8328012344402733`*^9}, {
   3.832907458459487*^9, 3.832907476802927*^9}, {3.8329075152993965`*^9, 
   3.8329075356103077`*^9}, {3.833324321876432*^9, 3.833324322939667*^9}, {
   3.833324386659212*^9, 3.8333244326172094`*^9}, {3.833324679546693*^9, 
   3.8333246839541135`*^9}, {3.8333247805472326`*^9, 3.833324782803672*^9}, {
   3.8333407147542343`*^9, 3.8333407499688897`*^9}, {3.8333416358952446`*^9, 
   3.8333417023510942`*^9}, {3.8333417995852227`*^9, 
   3.8333418286890726`*^9}, {3.833341931127696*^9, 3.8333419745513*^9}, {
   3.833342075327962*^9, 3.833342080886598*^9}, {3.833342159648266*^9, 
   3.8333424164875603`*^9}, {3.833771327814605*^9, 3.833771397326125*^9}, {
   3.833771450037882*^9, 3.8337715382616177`*^9}, {3.833857992994762*^9, 
   3.833858005168937*^9}, {3.8338581444155884`*^9, 3.833858151080624*^9}, {
   3.8338803656463356`*^9, 3.833880438071907*^9}, {3.8340162323563623`*^9, 
   3.8340163194025507`*^9}, {3.8340163497643375`*^9, 
   3.8340163514895086`*^9}, {3.834016398708268*^9, 3.8340164044324203`*^9}, {
   3.8340167434738884`*^9, 3.8340167457923737`*^9}, {3.8340168956269803`*^9, 
   3.8340169557776303`*^9}, {3.834017003346488*^9, 3.8340170036558795`*^9}, {
   3.834017091530233*^9, 3.834017100608238*^9}, {3.8340171997229366`*^9, 
   3.834017205401269*^9}, 3.8340174626659417`*^9, {3.8340237182775664`*^9, 
   3.8340238347521257`*^9}, {3.834023931972432*^9, 3.834024005925449*^9}, {
   3.834024041893632*^9, 3.834024108098747*^9}, {3.8340241566354713`*^9, 
   3.834024188276352*^9}, {3.83402481833982*^9, 3.8340248423622775`*^9}, {
   3.8340254416768684`*^9, 3.834025445261794*^9}, {3.8340255480117755`*^9, 
   3.834025554524522*^9}, {3.834025606875882*^9, 3.834025779611601*^9}, {
   3.8340258395327168`*^9, 3.834025858481798*^9}, {3.8340261906364975`*^9, 
   3.834026191050025*^9}, {3.834026303196108*^9, 3.8340263438264203`*^9}, {
   3.834026542003769*^9, 3.834026552265226*^9}, {3.8340266036105094`*^9, 
   3.834026657490783*^9}, {3.834028242267047*^9, 3.834028258089897*^9}, {
   3.834029295369621*^9, 3.8340293095364265`*^9}, {3.8340293634962797`*^9, 
   3.834029417496022*^9}, {3.8340294754638367`*^9, 3.834029537527832*^9}, {
   3.834029583201541*^9, 3.8340295881220264`*^9}, 3.834029665217955*^9, {
   3.8340299969612846`*^9, 3.83403001856038*^9}, {3.834030336741947*^9, 
   3.8340303984234533`*^9}, {3.834030452608559*^9, 3.8340304652715015`*^9}, {
   3.8340305094571486`*^9, 3.834030521321596*^9}, 3.8340305974561415`*^9, {
   3.834030687704501*^9, 3.834030716278955*^9}, {3.834030794953179*^9, 
   3.8340309341439195`*^9}, {3.8340310616571293`*^9, 
   3.8340310622301693`*^9}, {3.834031097448662*^9, 3.8340312504804716`*^9}, {
   3.834031284880072*^9, 3.834031312270884*^9}, {3.8340314379432807`*^9, 
   3.834031445646886*^9}, {3.8340316779183755`*^9, 3.8340316843016744`*^9}, {
   3.834031773550215*^9, 3.834031817454095*^9}, {3.8340319684058123`*^9, 
   3.8340319780673113`*^9}, {3.8340326883044624`*^9, 3.834032700125153*^9}, {
   3.8340328329816017`*^9, 3.834032865213583*^9}, {3.8340329081902523`*^9, 
   3.834032911333645*^9}, {3.8340338754529643`*^9, 3.8340339247649794`*^9}, {
   3.8340339591572027`*^9, 3.834034049142331*^9}, {3.8340340794695497`*^9, 
   3.8340340888627543`*^9}, {3.8340341427495265`*^9, 3.834034266629222*^9}, {
   3.834034355196986*^9, 3.8340343719594836`*^9}, {3.8340344056468735`*^9, 
   3.834034413116949*^9}, {3.8340344567911587`*^9, 3.83403447638811*^9}, {
   3.834034551102846*^9, 3.8340346348204064`*^9}, {3.83403523478255*^9, 
   3.8340353022774067`*^9}, {3.834035385638688*^9, 3.8340354048757277`*^9}, {
   3.8340354617554655`*^9, 3.8340354687084055`*^9}, {3.834035515899887*^9, 
   3.8340355171106253`*^9}, {3.8340355683421335`*^9, 
   3.8340357868690977`*^9}, {3.83403586878113*^9, 3.834035875411933*^9}, 
   3.834035912941086*^9, {3.8340431029034953`*^9, 3.8340431232147274`*^9}, {
   3.8340431596226673`*^9, 3.8340431735748305`*^9}, {3.8340432082477307`*^9, 
   3.834043219402212*^9}, {3.834043305216717*^9, 3.8340433077214375`*^9}, {
   3.834043405472602*^9, 3.834043405614123*^9}, {3.8340444650242434`*^9, 
   3.8340444652638707`*^9}, {3.8340448449997883`*^9, 
   3.8340448508776827`*^9}, {3.8340453727031794`*^9, 3.83404539426145*^9}, {
   3.834045597817757*^9, 3.8340456100059147`*^9}, {3.834045659387438*^9, 
   3.834045670341997*^9}, {3.8340457719830236`*^9, 3.8340458038304296`*^9}, {
   3.8340458397615213`*^9, 3.8340458400611534`*^9}, {3.834097278406023*^9, 
   3.8340973990492563`*^9}, {3.8340974292443657`*^9, 3.83409744718745*^9}, {
   3.834097571164959*^9, 3.8340976341630955`*^9}, {3.8340980713474927`*^9, 
   3.8340980804689984`*^9}, {3.8341087460059614`*^9, 
   3.8341087610917273`*^9}, {3.8342055464142356`*^9, 3.834205559997295*^9}, {
   3.834272803426153*^9, 3.8342728612803774`*^9}, {3.834273218419854*^9, 
   3.8342732473533096`*^9}, {3.8342733264925303`*^9, 
   3.8342733393047934`*^9}, {3.834273375001859*^9, 3.8342733767283444`*^9}, {
   3.8342734213692436`*^9, 3.834273441808498*^9}, {3.834273503208662*^9, 
   3.8342736612411804`*^9}, {3.8342736999783864`*^9, 3.834273736601621*^9}, {
   3.834273778858473*^9, 3.834273813312028*^9}, {3.834273846145933*^9, 
   3.83427384815994*^9}, {3.8342799652957444`*^9, 3.83428000794035*^9}, {
   3.8342801639424953`*^9, 3.8342802144287567`*^9}, {3.83428326282796*^9, 
   3.834283288802761*^9}, {3.834284776515091*^9, 3.834284777025178*^9}, {
   3.834549201616341*^9, 3.8345492045482793`*^9}, {3.834634514277523*^9, 
   3.8346345182847843`*^9}, {3.834792354087783*^9, 3.834792414492859*^9}, {
   3.83480427480375*^9, 3.834804277265891*^9}, {3.8493298798039894`*^9, 
   3.8493299015882716`*^9}, {3.8510320819138484`*^9, 
   3.8510320826953287`*^9}, {3.8510321196005607`*^9, 3.8510321519519253`*^9}, 
   3.8510323643441*^9, 3.8510324525043893`*^9, 3.851032602305187*^9, {
   3.8510328185776277`*^9, 3.851032837847699*^9}, {3.851042936298739*^9, 
   3.8510429971377563`*^9}, {3.851043134387283*^9, 3.8510431355455465`*^9}, {
   3.8510433431393657`*^9, 3.8510433492340403`*^9}, {3.851048304092023*^9, 
   3.851048304371406*^9}, {3.8510487263483653`*^9, 3.851048767435519*^9}, {
   3.8510491126208076`*^9, 3.8510491305159225`*^9}, {3.85105115739814*^9, 
   3.8510511742446957`*^9}, {3.8510512320933013`*^9, 
   3.8510512337760725`*^9}, {3.8510516654468985`*^9, 
   3.8510517325892353`*^9}, {3.8510553028254204`*^9, 3.851055317320162*^9}, {
   3.851055497809684*^9, 3.851055515120303*^9}, 3.85111956623362*^9, 
   3.8511197271125154`*^9, {3.851390022495284*^9, 3.8513900235594387`*^9}, {
   3.851549782911781*^9, 
   3.8515497887668276`*^9}},ExpressionUUID->"0e311547-904f-42d5-b21b-\
30f5cca2c203"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"resByLv", "[", 
     RowBox[{"\"\<r1\>\"", ",", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "maxLv"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.851043504234567*^9, 3.8510435059622164`*^9}, {
   3.851051198548623*^9, 3.851051219669857*^9}, {3.8510514107119384`*^9, 
   3.8510514141419883`*^9}, {3.8510514446545362`*^9, 
   3.8510514478712883`*^9}, {3.8510517532376137`*^9, 3.851051757772279*^9}, 
   3.8511209864342155`*^9},
 CellLabel->
  "In[615]:=",ExpressionUUID->"68e72ae8-258e-4320-a340-ad269e518a43"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQEf7BlQgYPMKnHrgMr5DhAuh4OICvOPC2d2QvkC
Dinvyg+maZyF8kUcFkkZxgiW3YXyJRxSQ9L67598A+XLOGR81hW16v4N5Ss4
uNx415I+ldMRwldy0Cu6EV/9QAzKV3Ew+XTesH6hMpSv5hA078PrNboGUL6G
Q153jTLjeksoX8vBn7VYfcsWZyhfx8Hw6s51t0J9oXw9h51rQy/IOoZC+QYO
N3JWtTwWjIPyDR1ybvmyVVxKgfKNHNrPbXzL6Z0D5Rs7pET+fbjiaRGUb+KQ
6prvuv12BZRv6mDxePXyl/INUL6Zg9+fddPcVrRA+eYOngXZ6+dqdkH5Fg5H
QvYyiqZOgPItHZTK9/V/jJwC5Vs56K+SuBXCNRPKt3aYcOuYvFX/PCjfxsF1
Renbe42LoHxbhw9X1nLNcloG5ds5PMqcFjd/5ioo394hvGn+n4/T10P5Dg5T
covkXy7fBOE3ODjcem5ZkfJqK1Te0aFg9Qnrm3N3QuUdHf4DQcrZvY4AnMuY
TQ==
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 35.}, {0, 4.9999999999999994`*^8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8510435094883595`*^9, 3.8510487725802193`*^9, {3.851049121150736*^9, 
   3.8510491329912157`*^9}, {3.851051220742668*^9, 3.8510512368025513`*^9}, {
   3.851051418748438*^9, 3.851051448452736*^9}, 3.8510517583567524`*^9, 
   3.851055320421171*^9, 3.851055519343799*^9, 3.8511197374250393`*^9, 
   3.851120989621516*^9, 3.851490223570022*^9},
 CellLabel->
  "Out[615]=",ExpressionUUID->"3201d822-12c6-4d4c-ba41-4f901036405b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:751f\:4ea7", "Section",
 CellChangeTimes->{
  3.808631677265349*^9, {3.80869332707485*^9, 3.808693330648262*^9}, {
   3.8087189665087495`*^9, 3.808718967733144*^9}, {3.833960167790538*^9, 
   3.833960169137002*^9}, {3.834023624697265*^9, 3.834023664681054*^9}, {
   3.8340250206769943`*^9, 3.834025026350839*^9}, {3.834028677224286*^9, 
   3.834028678461182*^9}, {3.8345544512357435`*^9, 3.834554460736314*^9}, {
   3.8347346605450463`*^9, 
   3.8347346632428493`*^9}},ExpressionUUID->"c91716a4-2520-456b-a1b4-\
a60f5299bc97"],

Cell["\:79d1\:6280/\:82f1\:96c4/vip: \:7ebf\:6027\:4e58\:6cd5, \
\:659c\:7387=advanceParam", "Affiliation",
 CellChangeTimes->{{3.808633042792246*^9, 3.8086331084863987`*^9}, {
   3.808719028342112*^9, 3.8087190415453496`*^9}, {3.80878913282475*^9, 
   3.808789133464386*^9}, {3.8087940766025524`*^9, 3.8087941058362556`*^9}, {
   3.8340235613002286`*^9, 3.8340236090069103`*^9}, {3.8340236677878056`*^9, 
   3.8340236697927933`*^9}, 3.834025031631636*^9, {3.8340285143773403`*^9, 
   3.8340285194936504`*^9}, 3.8340286355365624`*^9, {3.8340286717436066`*^9, 
   3.8340287231513677`*^9}, 3.8340292587694736`*^9, {3.834031070094565*^9, 
   3.834031093038456*^9}, {3.8340454091905107`*^9, 3.834045480554221*^9}, {
   3.8340456944288187`*^9, 3.8340457161969275`*^9}, {3.83455519496177*^9, 
   3.8345552305682707`*^9}, {3.8346377211701026`*^9, 
   3.8346377452428017`*^9}},ExpressionUUID->"ab9e8ac3-4e22-46de-a7ca-\
37dce599df0e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "productconfig", ",", "productHours", ",", "bdNum", ",", "productBaseHour",
     ",", "productTotal", ",", "advanceParam", ",", "advanceParams"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"productconfig", " ", "=", "  ", 
   RowBox[{"Base`excleData", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directory", "[", "]"}], ",", "\"\<main.xlsx\>\""}], "}"}], 
      "]"}], ",", "\"\<resource\>\"", ",", "\"\<product\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"productHours", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"24", "*", "funcsLTStep"}], "/.", 
      RowBox[{"Private`x", "\[Rule]", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bdNum", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"FirstPosition", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"productconfig", "[", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{
            RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
          "\"\<build\>\""}], "]"}], "]"}], ",", 
       RowBox[{"n_", "/;", 
        RowBox[{"lv", "<", "n"}]}], ",", 
       RowBox[{"{", "5", "}"}]}], "]"}], "]"}], "-", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"productBaseHour", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"resconfig", "[", 
       RowBox[{
        RowBox[{"SelectFirst", "[", 
         RowBox[{
          RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
        "\"\<product\>\""}], "]"}], "*", 
      RowBox[{"productconfig", "[", 
       RowBox[{
        RowBox[{"SelectFirst", "[", 
         RowBox[{
          RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
        "\"\<base\>\""}], "]"}], "*", 
      RowBox[{
       RowBox[{"resSpeed", "[", 
        RowBox[{"type", ",", "lv"}], "]"}], "/", "24"}]}], ",", "10"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"productTotal", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"productBaseHour", "[", 
       RowBox[{"type", ",", "n"}], "]"}], "*", " ", 
      RowBox[{"bdNum", "[", 
       RowBox[{"type", ",", "n"}], "]"}], "*", 
      RowBox[{"productHours", "[", 
       RowBox[{"[", "n", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"lv", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"advanceParam", "[", 
    RowBox[{"type_", ",", "channel_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"productBaseHour", "[", 
            RowBox[{"type", ",", "n"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], "*", "x", "*", 
           RowBox[{"bdNum", "[", 
            RowBox[{"type", ",", "n"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", 
            RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}], ".", 
        RowBox[{"productHours", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}]}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"productconfig", "[", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{
            RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
          "channel"}], "]"}], "*", 
        RowBox[{"productTotal", "[", 
         RowBox[{"type", ",", "maxLv"}], "]"}]}]}], ",", "x"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"advanceParams", "=", " ", 
   RowBox[{"Dataset", "@", 
    RowBox[{"Association", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Normal", "@", 
        RowBox[{"resconfig", "[", 
         RowBox[{"All", ",", "\"\<type\>\""}], "]"}]}], "\[Rule]", 
       RowBox[{"Association", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<study\>\"", ",", "\"\<hero\>\"", ",", "\"\<vip\>\""}], 
             "}"}], "\[Rule]", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"Outer", "[", 
          RowBox[{"advanceParam", ",", 
           RowBox[{"Normal", "@", 
            RowBox[{"resconfig", "[", 
             RowBox[{"All", ",", "\"\<type\>\""}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<study\>\"", ",", "\"\<hero\>\"", ",", "\"\<vip\>\""}], 
            "}"}]}], "]"}]}], "]"}]}], "]"}]}]}]}], ";"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.8086321191192493`*^9, 3.8086321229284706`*^9}, {
   3.808650966346627*^9, 3.808651027259164*^9}, {3.8086552496278596`*^9, 
   3.8086552898557644`*^9}, {3.80865537466228*^9, 3.808655432070145*^9}, {
   3.808655475568187*^9, 3.808655499291773*^9}, {3.8086555458233986`*^9, 
   3.8086555470780134`*^9}, {3.808655592329652*^9, 3.8086556007401743`*^9}, {
   3.808655695441067*^9, 3.8086557544796934`*^9}, {3.8086558038377166`*^9, 
   3.808655838970436*^9}, {3.808655972399808*^9, 3.8086560475529747`*^9}, {
   3.808656126757228*^9, 3.8086561550829725`*^9}, {3.8086561853400106`*^9, 
   3.808656208164997*^9}, {3.808656294727317*^9, 3.808656315726019*^9}, {
   3.8086563601291018`*^9, 3.8086563670051336`*^9}, {3.808656402343069*^9, 
   3.8086564422063446`*^9}, {3.80865647256328*^9, 3.8086565039427433`*^9}, 
   3.808693943142417*^9, 3.8086939812742405`*^9, {3.8086941292264895`*^9, 
   3.8086941557148285`*^9}, 3.808694789403946*^9, {3.8086948771999826`*^9, 
   3.8086949488136897`*^9}, {3.8086950060734615`*^9, 3.808695028325946*^9}, {
   3.8086951385725393`*^9, 3.8086951498989315`*^9}, {3.8086957871964264`*^9, 
   3.8086958013317766`*^9}, {3.808695880875601*^9, 3.8086958893147945`*^9}, {
   3.8087150097141085`*^9, 3.8087151161769676`*^9}, {3.808715458109768*^9, 
   3.808715535392779*^9}, {3.8087155814522476`*^9, 3.8087155987644787`*^9}, {
   3.8087163438570256`*^9, 3.808716403476448*^9}, {3.8087167678683624`*^9, 
   3.8087169939172115`*^9}, {3.8087186170036573`*^9, 3.808718633111721*^9}, 
   3.808734826202589*^9, 3.808734905516019*^9, {3.808735034704901*^9, 
   3.808735047274339*^9}, {3.8087357144577036`*^9, 3.8087357585315804`*^9}, {
   3.8087358720045915`*^9, 3.808735876612048*^9}, {3.8087361042341127`*^9, 
   3.8087361056867275`*^9}, {3.8087362364854217`*^9, 3.808736236865576*^9}, 
   3.808736814246451*^9, {3.808736871962551*^9, 3.8087368832489142`*^9}, {
   3.8087824541772947`*^9, 3.808782511253625*^9}, 3.8087825441370564`*^9, {
   3.808782672963166*^9, 3.8087827019682374`*^9}, {3.8087828822104807`*^9, 
   3.808782967618992*^9}, {3.8087830143540063`*^9, 3.8087830262921753`*^9}, {
   3.8087830950311084`*^9, 3.8087831237733526`*^9}, {3.808783163152711*^9, 
   3.8087832349264655`*^9}, {3.808783274135768*^9, 3.808783276407037*^9}, {
   3.8087834177388306`*^9, 3.8087834305390196`*^9}, {3.8087835748694572`*^9, 
   3.8087835988112836`*^9}, {3.808783693884592*^9, 3.808783694240699*^9}, {
   3.808783757819089*^9, 3.808783761486614*^9}, {3.808784187708847*^9, 
   3.8087842823208647`*^9}, {3.808784396701518*^9, 3.808784434559076*^9}, {
   3.8087860534784064`*^9, 3.8087861892518363`*^9}, 3.80878631748376*^9, {
   3.8087863617633*^9, 3.8087863773516455`*^9}, {3.808786966175229*^9, 
   3.8087870343976316`*^9}, {3.808787162230459*^9, 3.808787184186225*^9}, {
   3.8087872706611805`*^9, 3.808787271630118*^9}, {3.8087878049869404`*^9, 
   3.8087878064011087`*^9}, {3.808787877410733*^9, 3.80878792222486*^9}, 
   3.8087882749203253`*^9, {3.808788682638295*^9, 3.8087886892430906`*^9}, {
   3.808788813989341*^9, 3.808788861154708*^9}, {3.8087889386138163`*^9, 
   3.8087889460344505`*^9}, {3.8087889767235775`*^9, 
   3.8087889908657455`*^9}, {3.8087890237011805`*^9, 
   3.8087890246578636`*^9}, {3.8087892753318157`*^9, 
   3.8087892937379475`*^9}, {3.808794113351554*^9, 3.808794115070833*^9}, {
   3.8087950063266764`*^9, 3.808795140372967*^9}, {3.8087973153549423`*^9, 
   3.808797363577663*^9}, {3.808797517047597*^9, 3.8087975173107147`*^9}, 
   3.8087975600950856`*^9, {3.80879771359706*^9, 3.8087977185001793`*^9}, {
   3.808797833497653*^9, 3.808797833816798*^9}, 3.8087984176579385`*^9, {
   3.8087985412618732`*^9, 3.8087985449656477`*^9}, {3.8087986205270667`*^9, 
   3.8087986326049337`*^9}, {3.8087987138967123`*^9, 
   3.8087987198139687`*^9}, {3.808799485451124*^9, 3.8087995298233404`*^9}, {
   3.8087996988355837`*^9, 3.80879971621819*^9}, {3.808800018794944*^9, 
   3.8088000418664613`*^9}, {3.8088032703790617`*^9, 3.8088032743211412`*^9},
    {3.8088033107700768`*^9, 3.80880335916182*^9}, {3.8088036696407137`*^9, 
   3.8088037177743144`*^9}, {3.808803889874916*^9, 3.8088038901112504`*^9}, {
   3.8088041341127057`*^9, 3.8088041342563257`*^9}, {3.808804860542604*^9, 
   3.8088048878019075`*^9}, {3.8091477426832285`*^9, 
   3.8091477875926867`*^9}, {3.8130210923923683`*^9, 
   3.8130210971355553`*^9}, {3.813021134698643*^9, 3.8130211360926027`*^9}, 
   3.813021276644721*^9, 3.813021798109539*^9, {3.8130226391712265`*^9, 
   3.8130226392888823`*^9}, {3.813032888145892*^9, 3.813032888788127*^9}, {
   3.8315896741397753`*^9, 3.8315896985456686`*^9}, {3.8315897307541275`*^9, 
   3.8315897347637963`*^9}, {3.831589902075383*^9, 3.831589928994995*^9}, {
   3.8315900263145123`*^9, 3.8315900372963295`*^9}, {3.83159007364235*^9, 
   3.8315901868170757`*^9}, {3.831590267828146*^9, 3.831590311626197*^9}, {
   3.831765149685164*^9, 3.831765150013067*^9}, {3.83177598734519*^9, 
   3.8317760029776487`*^9}, {3.8317760651051607`*^9, 
   3.8317760731046853`*^9}, {3.8317763096165857`*^9, 3.831776310840356*^9}, {
   3.831776372269432*^9, 3.8317763961600513`*^9}, {3.831776502841998*^9, 
   3.8317765035137653`*^9}, {3.8317785300165915`*^9, 3.8317785367754393`*^9}, 
   3.831780980067283*^9, {3.8321426291906977`*^9, 3.8321426511263604`*^9}, {
   3.8321444626609745`*^9, 3.832144514683178*^9}, {3.832195314259512*^9, 
   3.8321953485228767`*^9}, {3.83219538353137*^9, 3.8321954035794845`*^9}, {
   3.8321954547329693`*^9, 3.832195471829215*^9}, {3.832195561836808*^9, 
   3.832195595299019*^9}, 3.832196181605626*^9, {3.832196473634031*^9, 
   3.8321965248585644`*^9}, {3.832197397030918*^9, 3.8321973989227858`*^9}, {
   3.8321975336605663`*^9, 3.8321975384648385`*^9}, {3.8321976423013983`*^9, 
   3.832197644026271*^9}, {3.832197725926578*^9, 3.8321977285457506`*^9}, 
   3.832197781597249*^9, {3.8321979671080832`*^9, 3.8321979686330786`*^9}, 
   3.8322010377149954`*^9, {3.832201078482271*^9, 3.8322011489054117`*^9}, 
   3.8322011844020615`*^9, {3.83220127275482*^9, 3.832201324626897*^9}, 
   3.832201374168996*^9, {3.8322021362040243`*^9, 3.8322021468577595`*^9}, 
   3.832202223115119*^9, {3.8322023251911855`*^9, 3.832202325336165*^9}, {
   3.8322089574801674`*^9, 3.8322090043690486`*^9}, {3.8322090893931055`*^9, 
   3.8322090926701903`*^9}, {3.832209209944267*^9, 3.832209210046615*^9}, {
   3.8322094605132256`*^9, 3.8322094615604696`*^9}, {3.832209675127907*^9, 
   3.832209675366907*^9}, {3.8328012249525585`*^9, 3.8328012344402733`*^9}, {
   3.832907458459487*^9, 3.832907476802927*^9}, {3.8329075152993965`*^9, 
   3.8329075356103077`*^9}, {3.833324321876432*^9, 3.833324322939667*^9}, {
   3.833324386659212*^9, 3.8333244326172094`*^9}, {3.833324679546693*^9, 
   3.8333246839541135`*^9}, {3.8333247805472326`*^9, 3.833324782803672*^9}, {
   3.8333407147542343`*^9, 3.8333407499688897`*^9}, {3.8333416358952446`*^9, 
   3.8333417023510942`*^9}, {3.8333417995852227`*^9, 
   3.8333418286890726`*^9}, {3.833341931127696*^9, 3.8333419745513*^9}, {
   3.833342075327962*^9, 3.833342080886598*^9}, {3.833342159648266*^9, 
   3.8333424164875603`*^9}, {3.833771327814605*^9, 3.833771397326125*^9}, {
   3.833771450037882*^9, 3.8337715382616177`*^9}, {3.833857992994762*^9, 
   3.833858005168937*^9}, {3.8338581444155884`*^9, 3.833858151080624*^9}, {
   3.8338803656463356`*^9, 3.833880438071907*^9}, {3.8340162323563623`*^9, 
   3.8340163194025507`*^9}, {3.8340163497643375`*^9, 
   3.8340163514895086`*^9}, {3.834016398708268*^9, 3.8340164044324203`*^9}, {
   3.8340167434738884`*^9, 3.8340167457923737`*^9}, {3.8340168956269803`*^9, 
   3.8340169557776303`*^9}, {3.834017003346488*^9, 3.8340170036558795`*^9}, {
   3.834017091530233*^9, 3.834017100608238*^9}, {3.8340171997229366`*^9, 
   3.834017205401269*^9}, 3.8340174626659417`*^9, {3.8340237182775664`*^9, 
   3.8340238347521257`*^9}, {3.834023931972432*^9, 3.834024005925449*^9}, {
   3.834024041893632*^9, 3.834024108098747*^9}, {3.8340241566354713`*^9, 
   3.834024188276352*^9}, {3.83402481833982*^9, 3.8340248423622775`*^9}, {
   3.8340254416768684`*^9, 3.834025445261794*^9}, {3.8340255480117755`*^9, 
   3.834025554524522*^9}, {3.834025606875882*^9, 3.834025779611601*^9}, {
   3.8340258395327168`*^9, 3.834025858481798*^9}, {3.8340261906364975`*^9, 
   3.834026191050025*^9}, {3.834026303196108*^9, 3.8340263438264203`*^9}, {
   3.834026542003769*^9, 3.834026552265226*^9}, {3.8340266036105094`*^9, 
   3.834026657490783*^9}, {3.834028242267047*^9, 3.834028258089897*^9}, {
   3.834029295369621*^9, 3.8340293095364265`*^9}, {3.8340293634962797`*^9, 
   3.834029417496022*^9}, {3.8340294754638367`*^9, 3.834029537527832*^9}, {
   3.834029583201541*^9, 3.8340295881220264`*^9}, 3.834029665217955*^9, {
   3.8340299969612846`*^9, 3.83403001856038*^9}, {3.834030336741947*^9, 
   3.8340303984234533`*^9}, {3.834030452608559*^9, 3.8340304652715015`*^9}, {
   3.8340305094571486`*^9, 3.834030521321596*^9}, 3.8340305974561415`*^9, {
   3.834030687704501*^9, 3.834030716278955*^9}, {3.834030794953179*^9, 
   3.8340309341439195`*^9}, {3.8340310616571293`*^9, 
   3.8340310622301693`*^9}, {3.834031097448662*^9, 3.8340312504804716`*^9}, {
   3.834031284880072*^9, 3.834031312270884*^9}, {3.8340314379432807`*^9, 
   3.834031445646886*^9}, {3.8340316779183755`*^9, 3.8340316843016744`*^9}, {
   3.834031773550215*^9, 3.834031817454095*^9}, {3.8340319684058123`*^9, 
   3.8340319780673113`*^9}, {3.8340326883044624`*^9, 3.834032700125153*^9}, {
   3.8340328329816017`*^9, 3.834032865213583*^9}, {3.8340329081902523`*^9, 
   3.834032911333645*^9}, {3.8340338754529643`*^9, 3.8340339247649794`*^9}, {
   3.8340339591572027`*^9, 3.834034049142331*^9}, {3.8340340794695497`*^9, 
   3.8340340888627543`*^9}, {3.8340341427495265`*^9, 3.834034266629222*^9}, {
   3.834034355196986*^9, 3.8340343719594836`*^9}, {3.8340344056468735`*^9, 
   3.834034413116949*^9}, {3.8340344567911587`*^9, 3.83403447638811*^9}, {
   3.834034551102846*^9, 3.8340346348204064`*^9}, {3.83403523478255*^9, 
   3.8340353022774067`*^9}, {3.834035385638688*^9, 3.8340354048757277`*^9}, {
   3.8340354617554655`*^9, 3.8340354687084055`*^9}, {3.834035515899887*^9, 
   3.8340355171106253`*^9}, {3.8340355683421335`*^9, 
   3.8340357868690977`*^9}, {3.83403586878113*^9, 3.834035875411933*^9}, 
   3.834035912941086*^9, {3.8340431029034953`*^9, 3.8340431232147274`*^9}, {
   3.8340431596226673`*^9, 3.8340431735748305`*^9}, {3.8340432082477307`*^9, 
   3.834043219402212*^9}, {3.834043305216717*^9, 3.8340433077214375`*^9}, {
   3.834043405472602*^9, 3.834043405614123*^9}, {3.8340444650242434`*^9, 
   3.8340444652638707`*^9}, {3.8340448449997883`*^9, 
   3.8340448508776827`*^9}, {3.8340453727031794`*^9, 3.83404539426145*^9}, {
   3.834045597817757*^9, 3.8340456100059147`*^9}, {3.834045659387438*^9, 
   3.834045670341997*^9}, {3.8340457719830236`*^9, 3.8340458038304296`*^9}, {
   3.8340458397615213`*^9, 3.8340458400611534`*^9}, {3.834097278406023*^9, 
   3.8340973990492563`*^9}, {3.8340974292443657`*^9, 3.83409744718745*^9}, {
   3.834097571164959*^9, 3.8340976341630955`*^9}, {3.8340980713474927`*^9, 
   3.8340980804689984`*^9}, {3.8341087460059614`*^9, 
   3.8341087610917273`*^9}, {3.8342055464142356`*^9, 3.834205559997295*^9}, {
   3.834272803426153*^9, 3.8342728612803774`*^9}, {3.834273218419854*^9, 
   3.8342732473533096`*^9}, {3.8342733264925303`*^9, 
   3.8342733393047934`*^9}, {3.834273375001859*^9, 3.8342733767283444`*^9}, {
   3.8342734213692436`*^9, 3.834273441808498*^9}, {3.834273503208662*^9, 
   3.8342736612411804`*^9}, {3.8342736999783864`*^9, 3.834273736601621*^9}, {
   3.834273778858473*^9, 3.834273813312028*^9}, {3.834273846145933*^9, 
   3.83427384815994*^9}, {3.8342799652957444`*^9, 3.83428000794035*^9}, {
   3.8342801639424953`*^9, 3.8342802144287567`*^9}, {3.83428326282796*^9, 
   3.834283288802761*^9}, {3.834284776515091*^9, 3.834284777025178*^9}, {
   3.834549201616341*^9, 3.8345492045482793`*^9}, {3.8345552623389277`*^9, 
   3.8345552985704637`*^9}, {3.834555611873389*^9, 3.8345556196003346`*^9}, {
   3.8345619376853313`*^9, 3.8345619437561536`*^9}, {3.8345621188719416`*^9, 
   3.834562150188419*^9}, {3.834562226955327*^9, 3.834562245659159*^9}, {
   3.83456228713326*^9, 3.8345623222598205`*^9}, {3.834563349142085*^9, 
   3.8345634510826955`*^9}, 3.8345635123707952`*^9, {3.8345639343499455`*^9, 
   3.8345639426599784`*^9}, {3.8345656039807005`*^9, 
   3.8345656786602325`*^9}, {3.8345657101645994`*^9, 3.834565712250552*^9}, {
   3.8345657463553624`*^9, 3.8345658016443567`*^9}, {3.834565838196368*^9, 
   3.8345659514265594`*^9}, {3.8345660408179827`*^9, 3.834566130353927*^9}, {
   3.834566246700873*^9, 3.834566250345869*^9}, {3.8345671021789017`*^9, 
   3.834567113750271*^9}, {3.8346369312683372`*^9, 3.8346370264825*^9}, {
   3.834637181082836*^9, 3.83463722757082*^9}, {3.834637307820859*^9, 
   3.8346373093702745`*^9}, {3.834637346580366*^9, 3.8346373774501033`*^9}, {
   3.834637445676406*^9, 3.8346374479785585`*^9}, {3.8346376976682796`*^9, 
   3.834637718314373*^9}, {3.834637749243888*^9, 3.8346377630424447`*^9}, {
   3.8346378715482235`*^9, 3.83463794337035*^9}, {3.8346379907469053`*^9, 
   3.8346381049464417`*^9}, {3.834639271635438*^9, 3.8346392736507792`*^9}, {
   3.8346393604609814`*^9, 3.834639371385722*^9}, {3.8346394049307117`*^9, 
   3.834639408272534*^9}, {3.8346397401615496`*^9, 3.83463974740961*^9}, {
   3.8346398362185593`*^9, 3.8346398422326736`*^9}, {3.834639937905448*^9, 
   3.834639968394347*^9}, 3.8346400522670813`*^9, {3.8346400841995907`*^9, 
   3.8346401020250216`*^9}, {3.8346401385220103`*^9, 3.8346401669088287`*^9}, 
   3.834640344593603*^9, 3.8346403957734046`*^9, {3.8346404689706173`*^9, 
   3.8346405028408995`*^9}, {3.8346405989471436`*^9, 3.834640631736794*^9}, {
   3.8347008550670543`*^9, 3.8347008588545437`*^9}, {3.8347196288110456`*^9, 
   3.8347196308097925`*^9}, {3.8347199966705537`*^9, 
   3.8347199990736732`*^9}, {3.834723477104761*^9, 3.834723483231531*^9}, {
   3.8370590391860294`*^9, 3.8370590405434313`*^9}, {3.8510455601179485`*^9, 
   3.851045566234417*^9}, {3.8510458271403675`*^9, 3.8510459099315786`*^9}, {
   3.851046841309116*^9, 3.8510468466276217`*^9}, {3.8510469405721564`*^9, 
   3.851047059957128*^9}, {3.851047096444982*^9, 3.8510471456064425`*^9}, {
   3.8510473218840537`*^9, 3.851047325333287*^9}, 3.8510493101650906`*^9, {
   3.8510497023833632`*^9, 3.8510497314454355`*^9}, {3.851049819060528*^9, 
   3.851049820188779*^9}, 3.8510498765957003`*^9, {3.8510506380466356`*^9, 
   3.851050647972554*^9}, {3.851055579681485*^9, 3.85105558175246*^9}, {
   3.851056097089944*^9, 3.851056222144886*^9}, {3.8510565626672783`*^9, 
   3.851056583889411*^9}, {3.851056641977976*^9, 3.8510566515766935`*^9}, 
   3.851059635610792*^9, {3.851059687418062*^9, 3.851059699098019*^9}, {
   3.8510600414435005`*^9, 3.85106004432155*^9}, {3.8510600749622602`*^9, 
   3.851060156076174*^9}, {3.851060197522477*^9, 3.8510602042499933`*^9}, {
   3.851118322474471*^9, 3.851118402002509*^9}, {3.8511185049479017`*^9, 
   3.8511185312709055`*^9}, {3.8511189307543287`*^9, 
   3.8511189328678045`*^9}, {3.851119044085408*^9, 3.8511191263218527`*^9}, {
   3.8511198666524906`*^9, 3.8511198669066253`*^9}, {3.851120447546239*^9, 
   3.851120461081211*^9}, {3.8511207155704536`*^9, 3.8511207182672753`*^9}, {
   3.8511207652914066`*^9, 3.85112077015276*^9}, {3.851120847268489*^9, 
   3.8511208539299793`*^9}, {3.851120938007058*^9, 3.851120947156726*^9}, {
   3.8511219945921664`*^9, 3.851122026346331*^9}, {3.851122061833741*^9, 
   3.8511220745868015`*^9}, {3.8511223093848104`*^9, 
   3.8511223161123147`*^9}, {3.851122495675133*^9, 3.851122498033888*^9}, {
   3.8511225358669386`*^9, 3.8511225745816555`*^9}, {3.8511317168213587`*^9, 
   3.851131742622078*^9}},
 CellLabel->
  "In[698]:=",ExpressionUUID->"4a4dad22-b847-4248-bf21-c4aca9c0ebfd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fucRok", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"Base`excleData", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directory", "[", "]"}], ",", "\"\<main.xlsx\>\""}], "}"}], 
        "]"}], ",", "\"\<other_data\>\"", ",", "\"\<rok\>\""}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<res_product\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fucSS", " ", "=", " ", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"Base`excleData", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directory", "[", "]"}], ",", "\"\<main.xlsx\>\""}], "}"}], 
        "]"}], ",", "\"\<other_data\>\"", ",", "\"\<ss\>\""}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<res_product\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"productBaseHour", "[", 
        RowBox[{"\"\<r4\>\"", ",", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "maxLv"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"productBaseHour", "[", 
        RowBox[{"\"\<r4\>\"", ",", "1"}], "]"}], "/", 
       RowBox[{"fucRok", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "*", "fucRok"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"productBaseHour", "[", 
        RowBox[{"\"\<r4\>\"", ",", "1"}], "]"}], "/", 
       RowBox[{"fucSS", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "*", "fucSS"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<sns\>\"", ",", "\"\<rok\>\"", ",", "\"\<ss\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\:4ea7\:91cf/h\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.851490260358616*^9, 3.851490267517327*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"a2045ff1-ad50-46d5-9441-e1b9985d643b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1z0tqwlAYhuHgyKEDBw4c2AtFpJSordp6yRG6ACnOOgmBUCiCERVRSo22
XlonLiFLcQldgktwCVq+10B4efLnJOdceN0XP2ZZ1tXp/q+ug6M+Gx7QNo2r
4StOqMbFSXXn4RRzH6eZv+EM83d8ybyDr5kH+Ib/93BWdfs4p0YDfKvuh/iO
74+wTcc0z/sTXFAzH7hIP+k9+5viB3Ub4pJqz3BZ/Tu7wn7m+JHzfOEntfWN
q+rh7Br7XeC6Gi5xQw1W2FETa2zoD+twhK0m5/llju2NOQJYMzrp
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwtzj8LAXEcx/FfJqPBQBmO5CTJfza/gZRSupRiuU4yGBh0ykIyGAwWz8dD
8RDuEQh93lfXu9f1/f5+lw223ipmjEn/3n/1RD21b/mgngc4joc4QUc0Scc0
pdoJzmAPO+prinN4hvPct8AF9n1cVP0lLqnOGpfZ3+CK+t7hKt3TGvsHXGf+
iBvcf8JN5i+4pUZX3Ob/brjD/B13Oe9h3TBwwzn+PO0XX3kotQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kMsKAWEYhicrSwsLCwlJkoQZ59O/sJKFpJSFNBkTyTifVm6D25jb4F5c
Ar//mbemp2d6e6dvYqYzsHyapkV+j6TKp63YEbwQ9lymi/vF+yXTxwNwCIPC
0GVGeIj+GA/DCYyK50Nmisf5nokn4Awm6Vt4ir6Np+ECZugv8Sz9FZ6Da5in
7+AF8T/H3eC64n2LG+q+3g4vcv8eL8EDLPM/PK+ovnvEq+yf8Br7Z7zO/gVv
wCtssu95i/2b+ALIHWAm
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\:4ea7\:91cf/h\"", TraditionalForm], 
     PlotRange -> {{0., 35.}, {0, 1407.5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"sns\"", "\"rok\"", "\"ss\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.851120466006951*^9, 3.851120720710416*^9, {3.8511207510717525`*^9, 
   3.851120766929717*^9}, 3.851120856953759*^9, {3.8514902323175993`*^9, 
   3.8514902384009266`*^9}, 3.851490270335025*^9},
 CellLabel->
  "Out[635]=",ExpressionUUID->"b4ea93b9-02c7-48dd-8388-031266b51895"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.851486486624171*^9, 
  3.8514865065666914`*^9}},ExpressionUUID->"10f4528d-9fb6-45c3-9402-\
127e64e69e26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportData", " ", "=", 
   RowBox[{"Association", "@@", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"snsGetIdByString", "[", 
           RowBox[{"\"\<attrgroup-build\>\"", ",", 
            RowBox[{
             RowBox[{"Base`excleLookUp", "[", 
              RowBox[{"resconfig", ",", 
               RowBox[{"\"\<type\>\"", "\[Rule]", "#"}], ",", 
               "\"\<attr\>\""}], "]"}], "<>", 
             RowBox[{"ToString", "@", "n"}]}]}], "]"}], "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<\:6570\:503c0\>\"", "\[Rule]", 
             RowBox[{"productBaseHour", "[", 
              RowBox[{"#", ",", "n"}], "]"}]}], ",", 
            RowBox[{"\"\<\:6570\:503c1\>\"", "->", 
             RowBox[{
              RowBox[{"productBaseHour", "[", 
               RowBox[{"#", ",", "n"}], "]"}], "*", "12"}]}]}], "|>"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "maxLv"}], "}"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Normal", "[", 
       RowBox[{"resconfig", "[", 
        RowBox[{"All", ",", "\"\<type\>\""}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8514863167038736`*^9, 3.8514863256708155`*^9}, {
   3.851486606208414*^9, 3.8514867118388877`*^9}, {3.8514867601675425`*^9, 
   3.851486768415406*^9}, {3.8514868093040295`*^9, 3.8514868440623193`*^9}, {
   3.851486878086033*^9, 3.851486898126796*^9}, {3.8514869441431503`*^9, 
   3.851486948398629*^9}, {3.8514869982403164`*^9, 3.851487003333769*^9}, 
   3.8514870946709747`*^9, {3.851648756113181*^9, 
   3.8516487567999897`*^9}},ExpressionUUID->"17535524-2c82-4935-b572-\
a87b1d26968e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"snsExportTable", "[", 
  RowBox[{"\"\<attrgroup-build.csv\>\"", ",", 
   RowBox[{"snsUpdateTable", "[", 
    RowBox[{"\"\<attrgroup-build\>\"", ",", "exportData"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8514853040721226`*^9, 3.851485493814497*^9}, {
  3.851485545231276*^9, 3.8514855627109427`*^9}, {3.851485682736107*^9, 
  3.851485711014634*^9}, {3.851485782599566*^9, 3.8514858152150307`*^9}, {
  3.8514859828241158`*^9, 3.8514860105748577`*^9}, {3.8514869052310305`*^9, 
  3.8514869294706535`*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"cbc4f668-137a-4b40-8581-c61ec82aeefa"],

Cell[BoxData["\<\"C:\\\\k-config\\\\excel\\\\attrgroup-build.csv\"\>"], \
"Output",
 CellChangeTimes->{{3.8514869300343328`*^9, 3.8514869589765625`*^9}, 
   3.8514870164342937`*^9, 3.851487107424533*^9, 3.8514902862168045`*^9},
 CellLabel->
  "Out[637]=",ExpressionUUID->"4c901f89-d36e-4a8e-8ae1-00fb8e1ac1e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:91c7\:96c6", "Section",
 CellChangeTimes->{
  3.808631677265349*^9, {3.80869332707485*^9, 3.808693330648262*^9}, {
   3.8087189665087495`*^9, 3.808718967733144*^9}, {3.833960167790538*^9, 
   3.833960169137002*^9}, {3.834023624697265*^9, 3.834023664681054*^9}, {
   3.8340250206769943`*^9, 3.834025026350839*^9}, {3.834028677224286*^9, 
   3.834028678461182*^9}, {3.8345544512357435`*^9, 3.834554460736314*^9}, {
   3.8347008376457577`*^9, 
   3.83470083938026*^9}},ExpressionUUID->"38a9e33f-4f0a-4878-8a60-\
fcfcc0b9926c"],

Cell["\<\
 collectTotal=Sum[base[lv]*hours[lv]*troopNum[lv]/resnum[lv],{1,maxLv}]\
\>", "Affiliation",
 CellChangeTimes->{{3.808633042792246*^9, 3.8086331084863987`*^9}, {
   3.808719028342112*^9, 3.8087190415453496`*^9}, {3.80878913282475*^9, 
   3.808789133464386*^9}, {3.8087940766025524`*^9, 3.8087941058362556`*^9}, {
   3.8340235613002286`*^9, 3.8340236090069103`*^9}, {3.8340236677878056`*^9, 
   3.8340236697927933`*^9}, 3.834025031631636*^9, {3.8340285143773403`*^9, 
   3.8340285194936504`*^9}, 3.8340286355365624`*^9, {3.8340286717436066`*^9, 
   3.8340287231513677`*^9}, 3.8340292587694736`*^9, {3.834031070094565*^9, 
   3.834031093038456*^9}, {3.8340454091905107`*^9, 3.834045480554221*^9}, {
   3.8340456944288187`*^9, 3.8340457161969275`*^9}, {3.83455519496177*^9, 
   3.8345552305682707`*^9}, {3.8346377211701026`*^9, 
   3.8346377452428017`*^9}, {3.8347009853156004`*^9, 
   3.8347010450802946`*^9}, {3.8347187018506947`*^9, 3.834718702777895*^9}, {
   3.834718748260491*^9, 3.83471885616963*^9}, {3.834718887169549*^9, 
   3.8347189229695253`*^9}, {3.8513815622608585`*^9, 
   3.851381576797453*^9}},ExpressionUUID->"4f362f64-c316-4f33-8411-\
a01983d48f93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "collectconfig", ",", "troopNum", ",", "resNum", ",", "collectHours", ",", 
    "collectAdvanceParam", ",", "collectAdvanceParams"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"collectconfig", " ", "=", "  ", 
   RowBox[{"Base`excleData", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directory", "[", "]"}], ",", "\"\<main.xlsx\>\""}], "}"}], 
      "]"}], ",", "\"\<resource\>\"", ",", "\"\<collection\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"troopNum", "[", "lv_", "]"}], ":=", " ", 
   RowBox[{"Base`excleLookUp", "[", 
    RowBox[{"collectconfig", ",", 
     RowBox[{"\"\<lv\>\"", "\[Rule]", " ", "lv"}], ",", "\"\<troopNum\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"resNum", "[", "lv_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstPosition", "[", 
      RowBox[{
       RowBox[{"resconfig", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "/@", 
           RowBox[{"ToExpression", "[", "#", "]"}]}], "&"}], ",", 
         "\"\<build\>\""}], "]"}], ",", 
       RowBox[{"n_", "/;", 
        RowBox[{"n", ">", " ", "lv"}]}], ",", 
       RowBox[{"{", "5", "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"collectHours", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Base`excleInterpolation", "[", 
        RowBox[{"collectconfig", ",", 
         RowBox[{"\"\<lv\>\"", "\[Rule]", " ", "n"}], ",", "\"\<hours\>\""}], 
        "]"}], "*", "funcsLTStep"}], "/.", 
      RowBox[{"Private`x", "\[Rule]", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"collectBaseHour", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"resconfig", "[", 
       RowBox[{
        RowBox[{"SelectFirst", "[", 
         RowBox[{
          RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
        "\"\<collect\>\""}], "]"}], "*", 
      RowBox[{"collectconfig", "[", 
       RowBox[{
        RowBox[{"SelectFirst", "[", 
         RowBox[{
          RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
        "\"\<base\>\""}], "]"}], "*", 
      RowBox[{
       RowBox[{"resSpeed", "[", 
        RowBox[{"type", ",", "maxLv"}], "]"}], "/", "24"}]}], ",", "10"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"collectTotal", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"collectBaseHour", "[", 
       RowBox[{"type", ",", "n"}], "]"}], "*", " ", 
      RowBox[{"troopNum", "[", "n", "]"}], "*", 
      RowBox[{
       RowBox[{"collectHours", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "/", 
       RowBox[{"resNum", "[", "n", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"lv", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"collectAdvanceParam", "[", 
    RowBox[{"type_", ",", "channel_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"collectBaseHour", "[", 
            RowBox[{"type", ",", "n"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], "*", "x", "*", 
           RowBox[{
            RowBox[{"troopNum", "[", "n", "]"}], "/", 
            RowBox[{"resNum", "[", "n", "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}], ".", 
        "collectHours"}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{"collectconfig", "[", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{
            RowBox[{"#type", "\[Equal]", "type"}], "&"}], "]"}], ",", 
          "channel"}], "]"}], "*", 
        RowBox[{"collectTotal", "[", 
         RowBox[{"type", ",", "maxLv"}], "]"}]}]}], ",", "x"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"collectAdvanceParams", "=", " ", 
   RowBox[{"Dataset", "@", 
    RowBox[{"Association", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Normal", "@", 
        RowBox[{"collectconfig", "[", 
         RowBox[{"All", ",", "\"\<type\>\""}], "]"}]}], "\[Rule]", 
       RowBox[{"Association", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<study\>\"", ",", "\"\<hero\>\"", ",", "\"\<vip\>\""}], 
             "}"}], "\[Rule]", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"Outer", "[", 
          RowBox[{"collectAdvanceParam", ",", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Normal", "@", 
              RowBox[{"collectconfig", "[", 
               RowBox[{"All", ",", "\"\<type\>\""}], "]"}]}], ",", 
             "\"\<\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<study\>\"", ",", "\"\<hero\>\"", ",", "\"\<vip\>\""}], 
            "}"}]}], "]"}]}], "]"}]}], "]"}]}]}]}], ";"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.8086321191192493`*^9, 3.8086321229284706`*^9}, {
   3.808650966346627*^9, 3.808651027259164*^9}, {3.8086552496278596`*^9, 
   3.8086552898557644`*^9}, {3.80865537466228*^9, 3.808655432070145*^9}, {
   3.808655475568187*^9, 3.808655499291773*^9}, {3.8086555458233986`*^9, 
   3.8086555470780134`*^9}, {3.808655592329652*^9, 3.8086556007401743`*^9}, {
   3.808655695441067*^9, 3.8086557544796934`*^9}, {3.8086558038377166`*^9, 
   3.808655838970436*^9}, {3.808655972399808*^9, 3.8086560475529747`*^9}, {
   3.808656126757228*^9, 3.8086561550829725`*^9}, {3.8086561853400106`*^9, 
   3.808656208164997*^9}, {3.808656294727317*^9, 3.808656315726019*^9}, {
   3.8086563601291018`*^9, 3.8086563670051336`*^9}, {3.808656402343069*^9, 
   3.8086564422063446`*^9}, {3.80865647256328*^9, 3.8086565039427433`*^9}, 
   3.808693943142417*^9, 3.8086939812742405`*^9, {3.8086941292264895`*^9, 
   3.8086941557148285`*^9}, 3.808694789403946*^9, {3.8086948771999826`*^9, 
   3.8086949488136897`*^9}, {3.8086950060734615`*^9, 3.808695028325946*^9}, {
   3.8086951385725393`*^9, 3.8086951498989315`*^9}, {3.8086957871964264`*^9, 
   3.8086958013317766`*^9}, {3.808695880875601*^9, 3.8086958893147945`*^9}, {
   3.8087150097141085`*^9, 3.8087151161769676`*^9}, {3.808715458109768*^9, 
   3.808715535392779*^9}, {3.8087155814522476`*^9, 3.8087155987644787`*^9}, {
   3.8087163438570256`*^9, 3.808716403476448*^9}, {3.8087167678683624`*^9, 
   3.8087169939172115`*^9}, {3.8087186170036573`*^9, 3.808718633111721*^9}, 
   3.808734826202589*^9, 3.808734905516019*^9, {3.808735034704901*^9, 
   3.808735047274339*^9}, {3.8087357144577036`*^9, 3.8087357585315804`*^9}, {
   3.8087358720045915`*^9, 3.808735876612048*^9}, {3.8087361042341127`*^9, 
   3.8087361056867275`*^9}, {3.8087362364854217`*^9, 3.808736236865576*^9}, 
   3.808736814246451*^9, {3.808736871962551*^9, 3.8087368832489142`*^9}, {
   3.8087824541772947`*^9, 3.808782511253625*^9}, 3.8087825441370564`*^9, {
   3.808782672963166*^9, 3.8087827019682374`*^9}, {3.8087828822104807`*^9, 
   3.808782967618992*^9}, {3.8087830143540063`*^9, 3.8087830262921753`*^9}, {
   3.8087830950311084`*^9, 3.8087831237733526`*^9}, {3.808783163152711*^9, 
   3.8087832349264655`*^9}, {3.808783274135768*^9, 3.808783276407037*^9}, {
   3.8087834177388306`*^9, 3.8087834305390196`*^9}, {3.8087835748694572`*^9, 
   3.8087835988112836`*^9}, {3.808783693884592*^9, 3.808783694240699*^9}, {
   3.808783757819089*^9, 3.808783761486614*^9}, {3.808784187708847*^9, 
   3.8087842823208647`*^9}, {3.808784396701518*^9, 3.808784434559076*^9}, {
   3.8087860534784064`*^9, 3.8087861892518363`*^9}, 3.80878631748376*^9, {
   3.8087863617633*^9, 3.8087863773516455`*^9}, {3.808786966175229*^9, 
   3.8087870343976316`*^9}, {3.808787162230459*^9, 3.808787184186225*^9}, {
   3.8087872706611805`*^9, 3.808787271630118*^9}, {3.8087878049869404`*^9, 
   3.8087878064011087`*^9}, {3.808787877410733*^9, 3.80878792222486*^9}, 
   3.8087882749203253`*^9, {3.808788682638295*^9, 3.8087886892430906`*^9}, {
   3.808788813989341*^9, 3.808788861154708*^9}, {3.8087889386138163`*^9, 
   3.8087889460344505`*^9}, {3.8087889767235775`*^9, 
   3.8087889908657455`*^9}, {3.8087890237011805`*^9, 
   3.8087890246578636`*^9}, {3.8087892753318157`*^9, 
   3.8087892937379475`*^9}, {3.808794113351554*^9, 3.808794115070833*^9}, {
   3.8087950063266764`*^9, 3.808795140372967*^9}, {3.8087973153549423`*^9, 
   3.808797363577663*^9}, {3.808797517047597*^9, 3.8087975173107147`*^9}, 
   3.8087975600950856`*^9, {3.80879771359706*^9, 3.8087977185001793`*^9}, {
   3.808797833497653*^9, 3.808797833816798*^9}, 3.8087984176579385`*^9, {
   3.8087985412618732`*^9, 3.8087985449656477`*^9}, {3.8087986205270667`*^9, 
   3.8087986326049337`*^9}, {3.8087987138967123`*^9, 
   3.8087987198139687`*^9}, {3.808799485451124*^9, 3.8087995298233404`*^9}, {
   3.8087996988355837`*^9, 3.80879971621819*^9}, {3.808800018794944*^9, 
   3.8088000418664613`*^9}, {3.8088032703790617`*^9, 3.8088032743211412`*^9},
    {3.8088033107700768`*^9, 3.80880335916182*^9}, {3.8088036696407137`*^9, 
   3.8088037177743144`*^9}, {3.808803889874916*^9, 3.8088038901112504`*^9}, {
   3.8088041341127057`*^9, 3.8088041342563257`*^9}, {3.808804860542604*^9, 
   3.8088048878019075`*^9}, {3.8091477426832285`*^9, 
   3.8091477875926867`*^9}, {3.8130210923923683`*^9, 
   3.8130210971355553`*^9}, {3.813021134698643*^9, 3.8130211360926027`*^9}, 
   3.813021276644721*^9, 3.813021798109539*^9, {3.8130226391712265`*^9, 
   3.8130226392888823`*^9}, {3.813032888145892*^9, 3.813032888788127*^9}, {
   3.8315896741397753`*^9, 3.8315896985456686`*^9}, {3.8315897307541275`*^9, 
   3.8315897347637963`*^9}, {3.831589902075383*^9, 3.831589928994995*^9}, {
   3.8315900263145123`*^9, 3.8315900372963295`*^9}, {3.83159007364235*^9, 
   3.8315901868170757`*^9}, {3.831590267828146*^9, 3.831590311626197*^9}, {
   3.831765149685164*^9, 3.831765150013067*^9}, {3.83177598734519*^9, 
   3.8317760029776487`*^9}, {3.8317760651051607`*^9, 
   3.8317760731046853`*^9}, {3.8317763096165857`*^9, 3.831776310840356*^9}, {
   3.831776372269432*^9, 3.8317763961600513`*^9}, {3.831776502841998*^9, 
   3.8317765035137653`*^9}, {3.8317785300165915`*^9, 3.8317785367754393`*^9}, 
   3.831780980067283*^9, {3.8321426291906977`*^9, 3.8321426511263604`*^9}, {
   3.8321444626609745`*^9, 3.832144514683178*^9}, {3.832195314259512*^9, 
   3.8321953485228767`*^9}, {3.83219538353137*^9, 3.8321954035794845`*^9}, {
   3.8321954547329693`*^9, 3.832195471829215*^9}, {3.832195561836808*^9, 
   3.832195595299019*^9}, 3.832196181605626*^9, {3.832196473634031*^9, 
   3.8321965248585644`*^9}, {3.832197397030918*^9, 3.8321973989227858`*^9}, {
   3.8321975336605663`*^9, 3.8321975384648385`*^9}, {3.8321976423013983`*^9, 
   3.832197644026271*^9}, {3.832197725926578*^9, 3.8321977285457506`*^9}, 
   3.832197781597249*^9, {3.8321979671080832`*^9, 3.8321979686330786`*^9}, 
   3.8322010377149954`*^9, {3.832201078482271*^9, 3.8322011489054117`*^9}, 
   3.8322011844020615`*^9, {3.83220127275482*^9, 3.832201324626897*^9}, 
   3.832201374168996*^9, {3.8322021362040243`*^9, 3.8322021468577595`*^9}, 
   3.832202223115119*^9, {3.8322023251911855`*^9, 3.832202325336165*^9}, {
   3.8322089574801674`*^9, 3.8322090043690486`*^9}, {3.8322090893931055`*^9, 
   3.8322090926701903`*^9}, {3.832209209944267*^9, 3.832209210046615*^9}, {
   3.8322094605132256`*^9, 3.8322094615604696`*^9}, {3.832209675127907*^9, 
   3.832209675366907*^9}, {3.8328012249525585`*^9, 3.8328012344402733`*^9}, {
   3.832907458459487*^9, 3.832907476802927*^9}, {3.8329075152993965`*^9, 
   3.8329075356103077`*^9}, {3.833324321876432*^9, 3.833324322939667*^9}, {
   3.833324386659212*^9, 3.8333244326172094`*^9}, {3.833324679546693*^9, 
   3.8333246839541135`*^9}, {3.8333247805472326`*^9, 3.833324782803672*^9}, {
   3.8333407147542343`*^9, 3.8333407499688897`*^9}, {3.8333416358952446`*^9, 
   3.8333417023510942`*^9}, {3.8333417995852227`*^9, 
   3.8333418286890726`*^9}, {3.833341931127696*^9, 3.8333419745513*^9}, {
   3.833342075327962*^9, 3.833342080886598*^9}, {3.833342159648266*^9, 
   3.8333424164875603`*^9}, {3.833771327814605*^9, 3.833771397326125*^9}, {
   3.833771450037882*^9, 3.8337715382616177`*^9}, {3.833857992994762*^9, 
   3.833858005168937*^9}, {3.8338581444155884`*^9, 3.833858151080624*^9}, {
   3.8338803656463356`*^9, 3.833880438071907*^9}, {3.8340162323563623`*^9, 
   3.8340163194025507`*^9}, {3.8340163497643375`*^9, 
   3.8340163514895086`*^9}, {3.834016398708268*^9, 3.8340164044324203`*^9}, {
   3.8340167434738884`*^9, 3.8340167457923737`*^9}, {3.8340168956269803`*^9, 
   3.8340169557776303`*^9}, {3.834017003346488*^9, 3.8340170036558795`*^9}, {
   3.834017091530233*^9, 3.834017100608238*^9}, {3.8340171997229366`*^9, 
   3.834017205401269*^9}, 3.8340174626659417`*^9, {3.8340237182775664`*^9, 
   3.8340238347521257`*^9}, {3.834023931972432*^9, 3.834024005925449*^9}, {
   3.834024041893632*^9, 3.834024108098747*^9}, {3.8340241566354713`*^9, 
   3.834024188276352*^9}, {3.83402481833982*^9, 3.8340248423622775`*^9}, {
   3.8340254416768684`*^9, 3.834025445261794*^9}, {3.8340255480117755`*^9, 
   3.834025554524522*^9}, {3.834025606875882*^9, 3.834025779611601*^9}, {
   3.8340258395327168`*^9, 3.834025858481798*^9}, {3.8340261906364975`*^9, 
   3.834026191050025*^9}, {3.834026303196108*^9, 3.8340263438264203`*^9}, {
   3.834026542003769*^9, 3.834026552265226*^9}, {3.8340266036105094`*^9, 
   3.834026657490783*^9}, {3.834028242267047*^9, 3.834028258089897*^9}, {
   3.834029295369621*^9, 3.8340293095364265`*^9}, {3.8340293634962797`*^9, 
   3.834029417496022*^9}, {3.8340294754638367`*^9, 3.834029537527832*^9}, {
   3.834029583201541*^9, 3.8340295881220264`*^9}, 3.834029665217955*^9, {
   3.8340299969612846`*^9, 3.83403001856038*^9}, {3.834030336741947*^9, 
   3.8340303984234533`*^9}, {3.834030452608559*^9, 3.8340304652715015`*^9}, {
   3.8340305094571486`*^9, 3.834030521321596*^9}, 3.8340305974561415`*^9, {
   3.834030687704501*^9, 3.834030716278955*^9}, {3.834030794953179*^9, 
   3.8340309341439195`*^9}, {3.8340310616571293`*^9, 
   3.8340310622301693`*^9}, {3.834031097448662*^9, 3.8340312504804716`*^9}, {
   3.834031284880072*^9, 3.834031312270884*^9}, {3.8340314379432807`*^9, 
   3.834031445646886*^9}, {3.8340316779183755`*^9, 3.8340316843016744`*^9}, {
   3.834031773550215*^9, 3.834031817454095*^9}, {3.8340319684058123`*^9, 
   3.8340319780673113`*^9}, {3.8340326883044624`*^9, 3.834032700125153*^9}, {
   3.8340328329816017`*^9, 3.834032865213583*^9}, {3.8340329081902523`*^9, 
   3.834032911333645*^9}, {3.8340338754529643`*^9, 3.8340339247649794`*^9}, {
   3.8340339591572027`*^9, 3.834034049142331*^9}, {3.8340340794695497`*^9, 
   3.8340340888627543`*^9}, {3.8340341427495265`*^9, 3.834034266629222*^9}, {
   3.834034355196986*^9, 3.8340343719594836`*^9}, {3.8340344056468735`*^9, 
   3.834034413116949*^9}, {3.8340344567911587`*^9, 3.83403447638811*^9}, {
   3.834034551102846*^9, 3.8340346348204064`*^9}, {3.83403523478255*^9, 
   3.8340353022774067`*^9}, {3.834035385638688*^9, 3.8340354048757277`*^9}, {
   3.8340354617554655`*^9, 3.8340354687084055`*^9}, {3.834035515899887*^9, 
   3.8340355171106253`*^9}, {3.8340355683421335`*^9, 
   3.8340357868690977`*^9}, {3.83403586878113*^9, 3.834035875411933*^9}, 
   3.834035912941086*^9, {3.8340431029034953`*^9, 3.8340431232147274`*^9}, {
   3.8340431596226673`*^9, 3.8340431735748305`*^9}, {3.8340432082477307`*^9, 
   3.834043219402212*^9}, {3.834043305216717*^9, 3.8340433077214375`*^9}, {
   3.834043405472602*^9, 3.834043405614123*^9}, {3.8340444650242434`*^9, 
   3.8340444652638707`*^9}, {3.8340448449997883`*^9, 
   3.8340448508776827`*^9}, {3.8340453727031794`*^9, 3.83404539426145*^9}, {
   3.834045597817757*^9, 3.8340456100059147`*^9}, {3.834045659387438*^9, 
   3.834045670341997*^9}, {3.8340457719830236`*^9, 3.8340458038304296`*^9}, {
   3.8340458397615213`*^9, 3.8340458400611534`*^9}, {3.834097278406023*^9, 
   3.8340973990492563`*^9}, {3.8340974292443657`*^9, 3.83409744718745*^9}, {
   3.834097571164959*^9, 3.8340976341630955`*^9}, {3.8340980713474927`*^9, 
   3.8340980804689984`*^9}, {3.8341087460059614`*^9, 
   3.8341087610917273`*^9}, {3.8342055464142356`*^9, 3.834205559997295*^9}, {
   3.834272803426153*^9, 3.8342728612803774`*^9}, {3.834273218419854*^9, 
   3.8342732473533096`*^9}, {3.8342733264925303`*^9, 
   3.8342733393047934`*^9}, {3.834273375001859*^9, 3.8342733767283444`*^9}, {
   3.8342734213692436`*^9, 3.834273441808498*^9}, {3.834273503208662*^9, 
   3.8342736612411804`*^9}, {3.8342736999783864`*^9, 3.834273736601621*^9}, {
   3.834273778858473*^9, 3.834273813312028*^9}, {3.834273846145933*^9, 
   3.83427384815994*^9}, {3.8342799652957444`*^9, 3.83428000794035*^9}, {
   3.8342801639424953`*^9, 3.8342802144287567`*^9}, {3.83428326282796*^9, 
   3.834283288802761*^9}, {3.834284776515091*^9, 3.834284777025178*^9}, {
   3.834549201616341*^9, 3.8345492045482793`*^9}, {3.8345552623389277`*^9, 
   3.8345552985704637`*^9}, {3.834555611873389*^9, 3.8345556196003346`*^9}, {
   3.8345619376853313`*^9, 3.8345619437561536`*^9}, {3.8345621188719416`*^9, 
   3.834562150188419*^9}, {3.834562226955327*^9, 3.834562245659159*^9}, {
   3.83456228713326*^9, 3.8345623222598205`*^9}, {3.834563349142085*^9, 
   3.8345634510826955`*^9}, 3.8345635123707952`*^9, {3.8345639343499455`*^9, 
   3.8345639426599784`*^9}, {3.8345656039807005`*^9, 
   3.8345656786602325`*^9}, {3.8345657101645994`*^9, 3.834565712250552*^9}, {
   3.8345657463553624`*^9, 3.8345658016443567`*^9}, {3.834565838196368*^9, 
   3.8345659514265594`*^9}, {3.8345660408179827`*^9, 3.834566130353927*^9}, {
   3.834566246700873*^9, 3.834566250345869*^9}, {3.8345671021789017`*^9, 
   3.834567113750271*^9}, {3.8346369312683372`*^9, 3.8346370264825*^9}, {
   3.834637181082836*^9, 3.83463722757082*^9}, {3.834637307820859*^9, 
   3.8346373093702745`*^9}, {3.834637346580366*^9, 3.8346373774501033`*^9}, {
   3.834637445676406*^9, 3.8346374479785585`*^9}, {3.8346376976682796`*^9, 
   3.834637718314373*^9}, {3.834637749243888*^9, 3.8346377630424447`*^9}, {
   3.8346378715482235`*^9, 3.83463794337035*^9}, {3.8346379907469053`*^9, 
   3.8346381049464417`*^9}, {3.834639271635438*^9, 3.8346392736507792`*^9}, {
   3.8346393604609814`*^9, 3.834639371385722*^9}, {3.8346394049307117`*^9, 
   3.834639408272534*^9}, {3.8346397401615496`*^9, 3.83463974740961*^9}, {
   3.8346398362185593`*^9, 3.8346398422326736`*^9}, {3.834639937905448*^9, 
   3.834639968394347*^9}, 3.8346400522670813`*^9, {3.8346400841995907`*^9, 
   3.8346401020250216`*^9}, {3.8346401385220103`*^9, 3.8346401669088287`*^9}, 
   3.834640344593603*^9, 3.8346403957734046`*^9, {3.8346404689706173`*^9, 
   3.8346405028408995`*^9}, {3.8346405989471436`*^9, 3.834640631736794*^9}, {
   3.834701055839015*^9, 3.8347010748618336`*^9}, {3.8347056048753724`*^9, 
   3.8347056407318306`*^9}, {3.834705777922858*^9, 3.8347057880995035`*^9}, {
   3.834706212843938*^9, 3.8347062134428315`*^9}, 3.834707539363573*^9, {
   3.834707951074725*^9, 3.8347079521052237`*^9}, 3.8347144441819587`*^9, 
   3.834715789788861*^9, {3.834715861276637*^9, 3.8347160174282513`*^9}, {
   3.8347160527249403`*^9, 3.8347161298998785`*^9}, {3.834716642759427*^9, 
   3.834716665499276*^9}, {3.8347167128306427`*^9, 3.8347167362121058`*^9}, {
   3.834716786437462*^9, 3.8347168087669277`*^9}, {3.834716935661276*^9, 
   3.834716948880638*^9}, {3.834717956460684*^9, 3.83471795841103*^9}, {
   3.8347182794596343`*^9, 3.8347182818604593`*^9}, {3.834718490356451*^9, 
   3.834718504950177*^9}, {3.834719036784298*^9, 3.834719052010575*^9}, {
   3.834719088650961*^9, 3.8347191089301815`*^9}, {3.83471923148368*^9, 
   3.8347192791616364`*^9}, {3.8347193136816874`*^9, 
   3.8347193522656317`*^9}, {3.834719580579913*^9, 3.834719592881384*^9}, 
   3.8347196336199017`*^9, {3.834719668378209*^9, 3.834719717450405*^9}, {
   3.834719966250229*^9, 3.83472003973081*^9}, {3.834720090386916*^9, 
   3.8347201887536073`*^9}, {3.8347203736517878`*^9, 
   3.8347204749302626`*^9}, {3.834720506204804*^9, 3.834720560921255*^9}, {
   3.8347206299712944`*^9, 3.834720645889462*^9}, 3.8347207030792303`*^9, 
   3.8347209887498837`*^9, {3.834721080937106*^9, 3.834721096080779*^9}, {
   3.834723183807501*^9, 3.834723207621791*^9}, {3.834723255532857*^9, 
   3.8347232915354767`*^9}, {3.834723370424436*^9, 3.8347233757606916`*^9}, {
   3.834723488824773*^9, 3.834723642879255*^9}, {3.834723688907123*^9, 
   3.834723695721404*^9}, {3.8347237642492046`*^9, 3.8347237660467305`*^9}, {
   3.834723807392193*^9, 3.8347238625362606`*^9}, {3.8347276964782643`*^9, 
   3.8347277102467413`*^9}, {3.834728547557906*^9, 3.834728556181568*^9}, {
   3.834728774261793*^9, 3.834728933418316*^9}, {3.834729115301113*^9, 
   3.834729119140885*^9}, 3.8347292831601887`*^9, {3.8510603523389454`*^9, 
   3.8510603641461644`*^9}, {3.851060396721897*^9, 3.8510604050098147`*^9}, {
   3.8511316319825773`*^9, 3.8511316577101326`*^9}, {3.8511316896376224`*^9, 
   3.851131695253766*^9}, {3.851131922485835*^9, 3.8511320070225554`*^9}, 
   3.851141779659487*^9, {3.851143314561721*^9, 3.8511433334904137`*^9}, {
   3.851143822857899*^9, 3.851143862490806*^9}, {3.8511439630429745`*^9, 
   3.8511439849684772`*^9}, {3.851144360274535*^9, 3.8511443686426973`*^9}, {
   3.8511444467444396`*^9, 3.8511444654428854`*^9}, {3.8511448136184587`*^9, 
   3.8511448548497114`*^9}, {3.851389828781414*^9, 3.8513898306064434`*^9}, {
   3.8513939608541665`*^9, 3.8513939912951083`*^9}, {3.8513940227178144`*^9, 
   3.851394118412693*^9}, {3.8513942170785875`*^9, 3.8513942473088317`*^9}, {
   3.8513946925167365`*^9, 3.851394693212655*^9}, {3.851395138236995*^9, 
   3.8513951467958193`*^9}, {3.851465061721908*^9, 3.8514650767455387`*^9}, {
   3.8514666609364214`*^9, 3.851466662201563*^9}, {3.851466773024276*^9, 
   3.8514667979918227`*^9}, {3.851490518709423*^9, 3.851490522553362*^9}, {
   3.8514909112931023`*^9, 3.8514909141564837`*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"fdc5da16-b3b7-4fc3-a644-7103ac4e530c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4ea7\:51fa\:6570\:636e", "Section",
 CellChangeTimes->{
  3.808631677265349*^9, {3.80869332707485*^9, 3.808693330648262*^9}, {
   3.8087189665087495`*^9, 3.808718967733144*^9}, {3.833960167790538*^9, 
   3.833960169137002*^9}, {3.834023624697265*^9, 3.834023664681054*^9}, {
   3.8340250206769943`*^9, 3.834025026350839*^9}, {3.834028677224286*^9, 
   3.834028678461182*^9}, {3.8345544512357435`*^9, 3.834554460736314*^9}, {
   3.8347008376457577`*^9, 3.83470083938026*^9}, {3.8348043423656645`*^9, 
   3.8348043503687363`*^9}, {3.838084214423702*^9, 
   3.838084236198159*^9}},ExpressionUUID->"5e15d108-08b4-4973-8cb0-\
0d390fc45606"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"otherParam", ",", "resData", ",", "resGetByLv"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"otherParam", "[", "type_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"funcsLTStep", "/.", 
            RowBox[{"Private`x", "\[Rule]", "n"}]}], ")"}], "*", "x", "*", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "2", ",", 
           RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}], "\[Equal]", " ", 
       RowBox[{"10000", "*", 
        RowBox[{"Times", "@@", 
         RowBox[{"Base`excleLookUp", "[", 
          RowBox[{"resconfig", ",", 
           RowBox[{"\"\<type\>\"", "\[Rule]", "type"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<total\>\"", ",", "\"\<other\>\""}], "}"}]}], 
          "]"}]}]}]}], ",", "x"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resData", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"baseTime", "=", 
        RowBox[{"(", 
         RowBox[{"funcsLTStep", "/.", 
          RowBox[{"Private`x", "\[Rule]", "lv"}]}], ")"}]}], ",", 
       "getParam"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"getParam", "[", 
        RowBox[{"fuc_", ",", "channel_"}], "]"}], ":=", " ", 
       RowBox[{
        RowBox[{"fuc", "[", 
         RowBox[{"type", ",", "channel"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"lv", "-", "1"}], ")"}]}]}], ";", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<lv\>\"", "\[Rule]", "lv"}], ",", 
        RowBox[{"\"\<base\>\"", "\[Rule]", 
         RowBox[{"resSpeed", "[", 
          RowBox[{"type", ",", "lv"}], "]"}]}], ",", 
        RowBox[{"\"\<baseTime\>\"", "\[Rule]", "baseTime"}], ",", 
        RowBox[{"\"\<productBaseHour\>\"", "\[Rule]", " ", 
         RowBox[{"productBaseHour", "[", 
          RowBox[{"type", ",", "lv"}], "]"}]}], ",", 
        RowBox[{"\"\<bdNum\>\"", "\[Rule]", 
         RowBox[{"bdNum", "[", 
          RowBox[{"type", ",", "lv"}], "]"}]}], ",", 
        RowBox[{"\"\<productStudy\>\"", "\[Rule]", " ", 
         RowBox[{"getParam", "[", 
          RowBox[{"advanceParam", ",", "\"\<study\>\""}], "]"}]}], ",", 
        RowBox[{"\"\<productHero\>\"", "\[Rule]", " ", 
         RowBox[{"getParam", "[", 
          RowBox[{"advanceParam", ",", "\"\<hero\>\""}], "]"}]}], ",", 
        RowBox[{"\"\<productVip\>\"", "\[Rule]", " ", 
         RowBox[{"getParam", "[", 
          RowBox[{"advanceParam", ",", "\"\<vip\>\""}], "]"}]}], ",", 
        RowBox[{"\"\<productHours\>\"", "\[Rule]", 
         RowBox[{"productHours", "[", 
          RowBox[{"[", "lv", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<productTotal\>\"", "->", 
         RowBox[{
          RowBox[{"productBaseHour", "[", 
           RowBox[{"type", ",", "lv"}], "]"}], "*", 
          RowBox[{"bdNum", "[", 
           RowBox[{"type", ",", "lv"}], "]"}], "*", 
          RowBox[{"productHours", "[", 
           RowBox[{"[", "lv", "]"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"getParam", "[", 
                RowBox[{"advanceParam", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "\"\<study\>\"", ",", "\"\<hero\>\"", ",", "\"\<vip\>\""}], 
               "}"}]}], "]"}]}], ")"}]}]}], ",", 
        RowBox[{"\"\<collectBaseHour\>\"", "\[Rule]", 
         RowBox[{"collectBaseHour", "[", 
          RowBox[{"type", ",", "lv"}], "]"}]}], ",", 
        RowBox[{"\"\<troopNum\>\"", "\[Rule]", 
         RowBox[{"troopNum", "[", "lv", "]"}]}], ",", 
        RowBox[{"\"\<resNum\>\"", "\[Rule]", " ", 
         RowBox[{"resNum", "[", "lv", "]"}]}], ",", 
        RowBox[{"\"\<collectStudy\>\"", "\[Rule]", " ", 
         RowBox[{"getParam", "[", 
          RowBox[{"collectAdvanceParams", ",", "\"\<study\>\""}], "]"}]}], 
        ",", 
        RowBox[{"\"\<collectHero\>\"", "\[Rule]", " ", 
         RowBox[{"getParam", "[", 
          RowBox[{"collectAdvanceParams", ",", "\"\<hero\>\""}], "]"}]}], ",", 
        RowBox[{"\"\<collectVip\>\"", "\[Rule]", " ", 
         RowBox[{"getParam", "[", 
          RowBox[{"collectAdvanceParams", ",", "\"\<vip\>\""}], "]"}]}], ",", 
        RowBox[{"\"\<collectHours\>\"", "\[Rule]", " ", 
         RowBox[{"collectHours", "[", 
          RowBox[{"[", "lv", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<collectTotal\>\"", "\[Rule]", 
         RowBox[{
          RowBox[{"collectBaseHour", "[", 
           RowBox[{"type", ",", "lv"}], "]"}], "*", 
          RowBox[{
           RowBox[{"troopNum", "[", "lv", "]"}], "/", 
           RowBox[{"resNum", "[", "lv", "]"}]}], "*", 
          RowBox[{"collectHours", "[", 
           RowBox[{"[", "lv", "]"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"getParam", "[", 
                RowBox[{"collectAdvanceParams", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "\"\<study\>\"", ",", "\"\<hero\>\"", ",", "\"\<vip\>\""}], 
               "}"}]}], "]"}]}], ")"}]}]}], " ", ",", 
        RowBox[{"\"\<other\>\"", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"otherParam", "[", "type", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"lv", "-", "1"}], ")"}]}]}]}], "|>"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resGetByLv", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "=", 
       RowBox[{"Dataset", "@", 
        RowBox[{"resData", "[", 
         RowBox[{"type", ",", "lv"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<product\>\"", "\[Rule]", 
        RowBox[{"data", "[", 
         RowBox[{"#productTotal", "&"}], "]"}]}], ",", 
       RowBox[{"\"\<collect\>\"", "\[Rule]", 
        RowBox[{"data", "[", 
         RowBox[{"#collectTotal", "&"}], "]"}]}], ",", 
       RowBox[{"\"\<other\>\"", "\[Rule]", 
        RowBox[{"data", "[", 
         RowBox[{
          RowBox[{"#other", "*", "#baseTime"}], "&"}], "]"}]}]}], "|>"}]}], 
    "]"}]}], ";"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.8086321191192493`*^9, 3.8086321229284706`*^9}, {
   3.808650966346627*^9, 3.808651027259164*^9}, {3.8086552496278596`*^9, 
   3.8086552898557644`*^9}, {3.80865537466228*^9, 3.808655432070145*^9}, {
   3.808655475568187*^9, 3.808655499291773*^9}, {3.8086555458233986`*^9, 
   3.8086555470780134`*^9}, {3.808655592329652*^9, 3.8086556007401743`*^9}, {
   3.808655695441067*^9, 3.8086557544796934`*^9}, {3.8086558038377166`*^9, 
   3.808655838970436*^9}, {3.808655972399808*^9, 3.8086560475529747`*^9}, {
   3.808656126757228*^9, 3.8086561550829725`*^9}, {3.8086561853400106`*^9, 
   3.808656208164997*^9}, {3.808656294727317*^9, 3.808656315726019*^9}, {
   3.8086563601291018`*^9, 3.8086563670051336`*^9}, {3.808656402343069*^9, 
   3.8086564422063446`*^9}, {3.80865647256328*^9, 3.8086565039427433`*^9}, 
   3.808693943142417*^9, 3.8086939812742405`*^9, {3.8086941292264895`*^9, 
   3.8086941557148285`*^9}, 3.808694789403946*^9, {3.8086948771999826`*^9, 
   3.8086949488136897`*^9}, {3.8086950060734615`*^9, 3.808695028325946*^9}, {
   3.8086951385725393`*^9, 3.8086951498989315`*^9}, {3.8086957871964264`*^9, 
   3.8086958013317766`*^9}, {3.808695880875601*^9, 3.8086958893147945`*^9}, {
   3.8087150097141085`*^9, 3.8087151161769676`*^9}, {3.808715458109768*^9, 
   3.808715535392779*^9}, {3.8087155814522476`*^9, 3.8087155987644787`*^9}, {
   3.8087163438570256`*^9, 3.808716403476448*^9}, {3.8087167678683624`*^9, 
   3.8087169939172115`*^9}, {3.8087186170036573`*^9, 3.808718633111721*^9}, 
   3.808734826202589*^9, 3.808734905516019*^9, {3.808735034704901*^9, 
   3.808735047274339*^9}, {3.8087357144577036`*^9, 3.8087357585315804`*^9}, {
   3.8087358720045915`*^9, 3.808735876612048*^9}, {3.8087361042341127`*^9, 
   3.8087361056867275`*^9}, {3.8087362364854217`*^9, 3.808736236865576*^9}, 
   3.808736814246451*^9, {3.808736871962551*^9, 3.8087368832489142`*^9}, {
   3.8087824541772947`*^9, 3.808782511253625*^9}, 3.8087825441370564`*^9, {
   3.808782672963166*^9, 3.8087827019682374`*^9}, {3.8087828822104807`*^9, 
   3.808782967618992*^9}, {3.8087830143540063`*^9, 3.8087830262921753`*^9}, {
   3.8087830950311084`*^9, 3.8087831237733526`*^9}, {3.808783163152711*^9, 
   3.8087832349264655`*^9}, {3.808783274135768*^9, 3.808783276407037*^9}, {
   3.8087834177388306`*^9, 3.8087834305390196`*^9}, {3.8087835748694572`*^9, 
   3.8087835988112836`*^9}, {3.808783693884592*^9, 3.808783694240699*^9}, {
   3.808783757819089*^9, 3.808783761486614*^9}, {3.808784187708847*^9, 
   3.8087842823208647`*^9}, {3.808784396701518*^9, 3.808784434559076*^9}, {
   3.8087860534784064`*^9, 3.8087861892518363`*^9}, 3.80878631748376*^9, {
   3.8087863617633*^9, 3.8087863773516455`*^9}, {3.808786966175229*^9, 
   3.8087870343976316`*^9}, {3.808787162230459*^9, 3.808787184186225*^9}, {
   3.8087872706611805`*^9, 3.808787271630118*^9}, {3.8087878049869404`*^9, 
   3.8087878064011087`*^9}, {3.808787877410733*^9, 3.80878792222486*^9}, 
   3.8087882749203253`*^9, {3.808788682638295*^9, 3.8087886892430906`*^9}, {
   3.808788813989341*^9, 3.808788861154708*^9}, {3.8087889386138163`*^9, 
   3.8087889460344505`*^9}, {3.8087889767235775`*^9, 
   3.8087889908657455`*^9}, {3.8087890237011805`*^9, 
   3.8087890246578636`*^9}, {3.8087892753318157`*^9, 
   3.8087892937379475`*^9}, {3.808794113351554*^9, 3.808794115070833*^9}, {
   3.8087950063266764`*^9, 3.808795140372967*^9}, {3.8087973153549423`*^9, 
   3.808797363577663*^9}, {3.808797517047597*^9, 3.8087975173107147`*^9}, 
   3.8087975600950856`*^9, {3.80879771359706*^9, 3.8087977185001793`*^9}, {
   3.808797833497653*^9, 3.808797833816798*^9}, 3.8087984176579385`*^9, {
   3.8087985412618732`*^9, 3.8087985449656477`*^9}, {3.8087986205270667`*^9, 
   3.8087986326049337`*^9}, {3.8087987138967123`*^9, 
   3.8087987198139687`*^9}, {3.808799485451124*^9, 3.8087995298233404`*^9}, {
   3.8087996988355837`*^9, 3.80879971621819*^9}, {3.808800018794944*^9, 
   3.8088000418664613`*^9}, {3.8088032703790617`*^9, 3.8088032743211412`*^9},
    {3.8088033107700768`*^9, 3.80880335916182*^9}, {3.8088036696407137`*^9, 
   3.8088037177743144`*^9}, {3.808803889874916*^9, 3.8088038901112504`*^9}, {
   3.8088041341127057`*^9, 3.8088041342563257`*^9}, {3.808804860542604*^9, 
   3.8088048878019075`*^9}, {3.8091477426832285`*^9, 
   3.8091477875926867`*^9}, {3.8130210923923683`*^9, 
   3.8130210971355553`*^9}, {3.813021134698643*^9, 3.8130211360926027`*^9}, 
   3.813021276644721*^9, 3.813021798109539*^9, {3.8130226391712265`*^9, 
   3.8130226392888823`*^9}, {3.813032888145892*^9, 3.813032888788127*^9}, {
   3.8315896741397753`*^9, 3.8315896985456686`*^9}, {3.8315897307541275`*^9, 
   3.8315897347637963`*^9}, {3.831589902075383*^9, 3.831589928994995*^9}, {
   3.8315900263145123`*^9, 3.8315900372963295`*^9}, {3.83159007364235*^9, 
   3.8315901868170757`*^9}, {3.831590267828146*^9, 3.831590311626197*^9}, {
   3.831765149685164*^9, 3.831765150013067*^9}, {3.83177598734519*^9, 
   3.8317760029776487`*^9}, {3.8317760651051607`*^9, 
   3.8317760731046853`*^9}, {3.8317763096165857`*^9, 3.831776310840356*^9}, {
   3.831776372269432*^9, 3.8317763961600513`*^9}, {3.831776502841998*^9, 
   3.8317765035137653`*^9}, {3.8317785300165915`*^9, 3.8317785367754393`*^9}, 
   3.831780980067283*^9, {3.8321426291906977`*^9, 3.8321426511263604`*^9}, {
   3.8321444626609745`*^9, 3.832144514683178*^9}, {3.832195314259512*^9, 
   3.8321953485228767`*^9}, {3.83219538353137*^9, 3.8321954035794845`*^9}, {
   3.8321954547329693`*^9, 3.832195471829215*^9}, {3.832195561836808*^9, 
   3.832195595299019*^9}, 3.832196181605626*^9, {3.832196473634031*^9, 
   3.8321965248585644`*^9}, {3.832197397030918*^9, 3.8321973989227858`*^9}, {
   3.8321975336605663`*^9, 3.8321975384648385`*^9}, {3.8321976423013983`*^9, 
   3.832197644026271*^9}, {3.832197725926578*^9, 3.8321977285457506`*^9}, 
   3.832197781597249*^9, {3.8321979671080832`*^9, 3.8321979686330786`*^9}, 
   3.8322010377149954`*^9, {3.832201078482271*^9, 3.8322011489054117`*^9}, 
   3.8322011844020615`*^9, {3.83220127275482*^9, 3.832201324626897*^9}, 
   3.832201374168996*^9, {3.8322021362040243`*^9, 3.8322021468577595`*^9}, 
   3.832202223115119*^9, {3.8322023251911855`*^9, 3.832202325336165*^9}, {
   3.8322089574801674`*^9, 3.8322090043690486`*^9}, {3.8322090893931055`*^9, 
   3.8322090926701903`*^9}, {3.832209209944267*^9, 3.832209210046615*^9}, {
   3.8322094605132256`*^9, 3.8322094615604696`*^9}, {3.832209675127907*^9, 
   3.832209675366907*^9}, {3.8328012249525585`*^9, 3.8328012344402733`*^9}, {
   3.832907458459487*^9, 3.832907476802927*^9}, {3.8329075152993965`*^9, 
   3.8329075356103077`*^9}, {3.833324321876432*^9, 3.833324322939667*^9}, {
   3.833324386659212*^9, 3.8333244326172094`*^9}, {3.833324679546693*^9, 
   3.8333246839541135`*^9}, {3.8333247805472326`*^9, 3.833324782803672*^9}, {
   3.8333407147542343`*^9, 3.8333407499688897`*^9}, {3.8333416358952446`*^9, 
   3.8333417023510942`*^9}, {3.8333417995852227`*^9, 
   3.8333418286890726`*^9}, {3.833341931127696*^9, 3.8333419745513*^9}, {
   3.833342075327962*^9, 3.833342080886598*^9}, {3.833342159648266*^9, 
   3.8333424164875603`*^9}, {3.833771327814605*^9, 3.833771397326125*^9}, {
   3.833771450037882*^9, 3.8337715382616177`*^9}, {3.833857992994762*^9, 
   3.833858005168937*^9}, {3.8338581444155884`*^9, 3.833858151080624*^9}, {
   3.8338803656463356`*^9, 3.833880438071907*^9}, {3.8340162323563623`*^9, 
   3.8340163194025507`*^9}, {3.8340163497643375`*^9, 
   3.8340163514895086`*^9}, {3.834016398708268*^9, 3.8340164044324203`*^9}, {
   3.8340167434738884`*^9, 3.8340167457923737`*^9}, {3.8340168956269803`*^9, 
   3.8340169557776303`*^9}, {3.834017003346488*^9, 3.8340170036558795`*^9}, {
   3.834017091530233*^9, 3.834017100608238*^9}, {3.8340171997229366`*^9, 
   3.834017205401269*^9}, 3.8340174626659417`*^9, {3.8340237182775664`*^9, 
   3.8340238347521257`*^9}, {3.834023931972432*^9, 3.834024005925449*^9}, {
   3.834024041893632*^9, 3.834024108098747*^9}, {3.8340241566354713`*^9, 
   3.834024188276352*^9}, {3.83402481833982*^9, 3.8340248423622775`*^9}, {
   3.8340254416768684`*^9, 3.834025445261794*^9}, {3.8340255480117755`*^9, 
   3.834025554524522*^9}, {3.834025606875882*^9, 3.834025779611601*^9}, {
   3.8340258395327168`*^9, 3.834025858481798*^9}, {3.8340261906364975`*^9, 
   3.834026191050025*^9}, {3.834026303196108*^9, 3.8340263438264203`*^9}, {
   3.834026542003769*^9, 3.834026552265226*^9}, {3.8340266036105094`*^9, 
   3.834026657490783*^9}, {3.834028242267047*^9, 3.834028258089897*^9}, {
   3.834029295369621*^9, 3.8340293095364265`*^9}, {3.8340293634962797`*^9, 
   3.834029417496022*^9}, {3.8340294754638367`*^9, 3.834029537527832*^9}, {
   3.834029583201541*^9, 3.8340295881220264`*^9}, 3.834029665217955*^9, {
   3.8340299969612846`*^9, 3.83403001856038*^9}, {3.834030336741947*^9, 
   3.8340303984234533`*^9}, {3.834030452608559*^9, 3.8340304652715015`*^9}, {
   3.8340305094571486`*^9, 3.834030521321596*^9}, 3.8340305974561415`*^9, {
   3.834030687704501*^9, 3.834030716278955*^9}, {3.834030794953179*^9, 
   3.8340309341439195`*^9}, {3.8340310616571293`*^9, 
   3.8340310622301693`*^9}, {3.834031097448662*^9, 3.8340312504804716`*^9}, {
   3.834031284880072*^9, 3.834031312270884*^9}, {3.8340314379432807`*^9, 
   3.834031445646886*^9}, {3.8340316779183755`*^9, 3.8340316843016744`*^9}, {
   3.834031773550215*^9, 3.834031817454095*^9}, {3.8340319684058123`*^9, 
   3.8340319780673113`*^9}, {3.8340326883044624`*^9, 3.834032700125153*^9}, {
   3.8340328329816017`*^9, 3.834032865213583*^9}, {3.8340329081902523`*^9, 
   3.834032911333645*^9}, {3.8340338754529643`*^9, 3.8340339247649794`*^9}, {
   3.8340339591572027`*^9, 3.834034049142331*^9}, {3.8340340794695497`*^9, 
   3.8340340888627543`*^9}, {3.8340341427495265`*^9, 3.834034266629222*^9}, {
   3.834034355196986*^9, 3.8340343719594836`*^9}, {3.8340344056468735`*^9, 
   3.834034413116949*^9}, {3.8340344567911587`*^9, 3.83403447638811*^9}, {
   3.834034551102846*^9, 3.8340346348204064`*^9}, {3.83403523478255*^9, 
   3.8340353022774067`*^9}, {3.834035385638688*^9, 3.8340354048757277`*^9}, {
   3.8340354617554655`*^9, 3.8340354687084055`*^9}, {3.834035515899887*^9, 
   3.8340355171106253`*^9}, {3.8340355683421335`*^9, 
   3.8340357868690977`*^9}, {3.83403586878113*^9, 3.834035875411933*^9}, 
   3.834035912941086*^9, {3.8340431029034953`*^9, 3.8340431232147274`*^9}, {
   3.8340431596226673`*^9, 3.8340431735748305`*^9}, {3.8340432082477307`*^9, 
   3.834043219402212*^9}, {3.834043305216717*^9, 3.8340433077214375`*^9}, {
   3.834043405472602*^9, 3.834043405614123*^9}, {3.8340444650242434`*^9, 
   3.8340444652638707`*^9}, {3.8340448449997883`*^9, 
   3.8340448508776827`*^9}, {3.8340453727031794`*^9, 3.83404539426145*^9}, {
   3.834045597817757*^9, 3.8340456100059147`*^9}, {3.834045659387438*^9, 
   3.834045670341997*^9}, {3.8340457719830236`*^9, 3.8340458038304296`*^9}, {
   3.8340458397615213`*^9, 3.8340458400611534`*^9}, {3.834097278406023*^9, 
   3.8340973990492563`*^9}, {3.8340974292443657`*^9, 3.83409744718745*^9}, {
   3.834097571164959*^9, 3.8340976341630955`*^9}, {3.8340980713474927`*^9, 
   3.8340980804689984`*^9}, {3.8341087460059614`*^9, 
   3.8341087610917273`*^9}, {3.8342055464142356`*^9, 3.834205559997295*^9}, {
   3.834272803426153*^9, 3.8342728612803774`*^9}, {3.834273218419854*^9, 
   3.8342732473533096`*^9}, {3.8342733264925303`*^9, 
   3.8342733393047934`*^9}, {3.834273375001859*^9, 3.8342733767283444`*^9}, {
   3.8342734213692436`*^9, 3.834273441808498*^9}, {3.834273503208662*^9, 
   3.8342736612411804`*^9}, {3.8342736999783864`*^9, 3.834273736601621*^9}, {
   3.834273778858473*^9, 3.834273813312028*^9}, {3.834273846145933*^9, 
   3.83427384815994*^9}, {3.8342799652957444`*^9, 3.83428000794035*^9}, {
   3.8342801639424953`*^9, 3.8342802144287567`*^9}, {3.83428326282796*^9, 
   3.834283288802761*^9}, {3.834284776515091*^9, 3.834284777025178*^9}, {
   3.834549201616341*^9, 3.8345492045482793`*^9}, {3.8345552623389277`*^9, 
   3.8345552985704637`*^9}, {3.834555611873389*^9, 3.8345556196003346`*^9}, {
   3.8345619376853313`*^9, 3.8345619437561536`*^9}, {3.8345621188719416`*^9, 
   3.834562150188419*^9}, {3.834562226955327*^9, 3.834562245659159*^9}, {
   3.83456228713326*^9, 3.8345623222598205`*^9}, {3.834563349142085*^9, 
   3.8345634510826955`*^9}, 3.8345635123707952`*^9, {3.8345639343499455`*^9, 
   3.8345639426599784`*^9}, {3.8345656039807005`*^9, 
   3.8345656786602325`*^9}, {3.8345657101645994`*^9, 3.834565712250552*^9}, {
   3.8345657463553624`*^9, 3.8345658016443567`*^9}, {3.834565838196368*^9, 
   3.8345659514265594`*^9}, {3.8345660408179827`*^9, 3.834566130353927*^9}, {
   3.834566246700873*^9, 3.834566250345869*^9}, {3.8345671021789017`*^9, 
   3.834567113750271*^9}, {3.8346369312683372`*^9, 3.8346370264825*^9}, {
   3.834637181082836*^9, 3.83463722757082*^9}, {3.834637307820859*^9, 
   3.8346373093702745`*^9}, {3.834637346580366*^9, 3.8346373774501033`*^9}, {
   3.834637445676406*^9, 3.8346374479785585`*^9}, {3.8346376976682796`*^9, 
   3.834637718314373*^9}, {3.834637749243888*^9, 3.8346377630424447`*^9}, {
   3.8346378715482235`*^9, 3.83463794337035*^9}, {3.8346379907469053`*^9, 
   3.8346381049464417`*^9}, {3.834639271635438*^9, 3.8346392736507792`*^9}, {
   3.8346393604609814`*^9, 3.834639371385722*^9}, {3.8346394049307117`*^9, 
   3.834639408272534*^9}, {3.8346397401615496`*^9, 3.83463974740961*^9}, {
   3.8346398362185593`*^9, 3.8346398422326736`*^9}, {3.834639937905448*^9, 
   3.834639968394347*^9}, 3.8346400522670813`*^9, {3.8346400841995907`*^9, 
   3.8346401020250216`*^9}, {3.8346401385220103`*^9, 3.8346401669088287`*^9}, 
   3.834640344593603*^9, 3.8346403957734046`*^9, {3.8346404689706173`*^9, 
   3.8346405028408995`*^9}, {3.8346405989471436`*^9, 3.834640631736794*^9}, {
   3.834701055839015*^9, 3.8347010748618336`*^9}, {3.8347056048753724`*^9, 
   3.8347056407318306`*^9}, {3.834705777922858*^9, 3.8347057880995035`*^9}, {
   3.834706212843938*^9, 3.8347062134428315`*^9}, 3.834707539363573*^9, {
   3.834707951074725*^9, 3.8347079521052237`*^9}, 3.8347144441819587`*^9, 
   3.834715789788861*^9, {3.834715861276637*^9, 3.8347160174282513`*^9}, {
   3.8347160527249403`*^9, 3.8347161298998785`*^9}, {3.834716642759427*^9, 
   3.834716665499276*^9}, {3.8347167128306427`*^9, 3.8347167362121058`*^9}, {
   3.834716786437462*^9, 3.8347168087669277`*^9}, {3.834716935661276*^9, 
   3.834716948880638*^9}, {3.834717956460684*^9, 3.83471795841103*^9}, {
   3.8347182794596343`*^9, 3.8347182818604593`*^9}, {3.834718490356451*^9, 
   3.834718504950177*^9}, {3.834719036784298*^9, 3.834719052010575*^9}, {
   3.834719088650961*^9, 3.8347191089301815`*^9}, {3.83471923148368*^9, 
   3.8347192791616364`*^9}, {3.8347193136816874`*^9, 
   3.8347193522656317`*^9}, {3.834719580579913*^9, 3.834719592881384*^9}, 
   3.8347196336199017`*^9, {3.834719668378209*^9, 3.834719717450405*^9}, {
   3.834719966250229*^9, 3.83472003973081*^9}, {3.834720090386916*^9, 
   3.8347201887536073`*^9}, {3.8347203736517878`*^9, 
   3.8347204749302626`*^9}, {3.834720506204804*^9, 3.834720560921255*^9}, {
   3.8347206299712944`*^9, 3.834720645889462*^9}, 3.8347207030792303`*^9, 
   3.8347209887498837`*^9, {3.834721080937106*^9, 3.834721096080779*^9}, {
   3.834723183807501*^9, 3.834723207621791*^9}, {3.834723255532857*^9, 
   3.8347232915354767`*^9}, {3.834723370424436*^9, 3.8347233757606916`*^9}, {
   3.834723488824773*^9, 3.834723642879255*^9}, {3.834723688907123*^9, 
   3.834723695721404*^9}, {3.8347237642492046`*^9, 3.8347237660467305`*^9}, {
   3.834723807392193*^9, 3.8347238625362606`*^9}, {3.8347276964782643`*^9, 
   3.8347277102467413`*^9}, {3.834728547557906*^9, 3.834728556181568*^9}, {
   3.834728774261793*^9, 3.834728933418316*^9}, {3.834729115301113*^9, 
   3.834729119140885*^9}, 3.8347292831601887`*^9, {3.834804366610817*^9, 
   3.8348043963534937`*^9}, {3.8348044842975054`*^9, 
   3.8348045193633842`*^9}, {3.834804551355632*^9, 3.8348049325751934`*^9}, {
   3.8348049716349754`*^9, 3.834804985889827*^9}, {3.83480502378705*^9, 
   3.83480505723407*^9}, {3.834805170057502*^9, 3.8348051747029266`*^9}, {
   3.8348052142304325`*^9, 3.8348052415609508`*^9}, {3.8348052914810014`*^9, 
   3.834805297308386*^9}, {3.834805361772029*^9, 3.8348053679840703`*^9}, 
   3.834805430962947*^9, {3.8348054688106008`*^9, 3.8348054744075546`*^9}, {
   3.8348055358252664`*^9, 3.8348055504476643`*^9}, {3.834806034755369*^9, 
   3.83480606832767*^9}, {3.834806101086889*^9, 3.834806222591632*^9}, {
   3.834806290642233*^9, 3.8348064458652267`*^9}, {3.834806637785348*^9, 
   3.8348066429283714`*^9}, {3.834806763662198*^9, 3.8348067772548504`*^9}, {
   3.834806813463016*^9, 3.8348068251758475`*^9}, {3.834807346505069*^9, 
   3.834807378414383*^9}, {3.8348081674496827`*^9, 3.8348081704244924`*^9}, {
   3.8348086833057537`*^9, 3.834808694641235*^9}, 3.8370590668741207`*^9, {
   3.838084192509843*^9, 3.8380841947319503`*^9}, {3.8514021461455164`*^9, 
   3.851402304792779*^9}, {3.8514023366567917`*^9, 3.8514023742328863`*^9}, 
   3.8514024170402536`*^9, {3.8514628106912336`*^9, 3.8514628121785955`*^9}, {
   3.8514628571549044`*^9, 3.851462858306054*^9}, {3.8514632909962034`*^9, 
   3.851463316009985*^9}, {3.851463856091708*^9, 3.8514638850498924`*^9}, {
   3.8514668012648177`*^9, 3.8514668458483486`*^9}, {3.8514668867372293`*^9, 
   3.8514668882119856`*^9}, {3.8514669552329006`*^9, 3.8514670326162615`*^9}, 
   3.8514826569386578`*^9, {3.8514828558173213`*^9, 3.851482907640379*^9}, {
   3.8514830249448605`*^9, 3.851483082514569*^9}, {3.8514831294982033`*^9, 
   3.8514831854402804`*^9}, {3.8514832274969645`*^9, 
   3.8514833390747414`*^9}, {3.851489547478078*^9, 3.851489549555822*^9}, {
   3.8514895967898216`*^9, 3.8514895991330447`*^9}, {3.851490018262497*^9, 
   3.851490080900858*^9}, {3.851550048238369*^9, 3.851550050695656*^9}, {
   3.851553392175148*^9, 3.8515534277414474`*^9}, {3.85155346742947*^9, 
   3.8515536959011583`*^9}, {3.8515547602909536`*^9, 3.851554785828884*^9}, {
   3.8515617456025286`*^9, 3.8515617538644238`*^9}, {3.8515618551624126`*^9, 
   3.8515619278896427`*^9}, {3.8515621784255285`*^9, 3.851562257544342*^9}, {
   3.851562329569957*^9, 3.8515623569135*^9}, {3.851562560169622*^9, 
   3.851562584322007*^9}, {3.8515626224248013`*^9, 3.851562700632437*^9}, 
   3.851562738888035*^9, {3.851562987121761*^9, 3.8515629954330635`*^9}},
 CellLabel->
  "In[887]:=",ExpressionUUID->"be4e234e-e8f6-401c-a2bc-8e36c962d6ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"dataPath", ",", 
        RowBox[{"#", "<>", "\"\<_\>\"", "<>", "\"\<resData.txt\>\""}]}], 
       "}"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"resData", "[", 
         RowBox[{"#", ",", "n"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}], "//", "Dataset"}], 
     ",", "\"\<Table\>\""}], "]"}], "&"}], "/@", 
  RowBox[{"resconfig", "[", 
   RowBox[{"All", ",", "\"\<type\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.851060335571001*^9, 3.8510603365463967`*^9}, 
   3.85111781332512*^9, 3.8514636512021503`*^9, {3.8514637330685987`*^9, 
   3.851463733210225*^9}},
 CellLabel->
  "In[891]:=",ExpressionUUID->"a12ea9f3-a2a8-487a-be89-61e48bfca4a0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "D:\\Work\\SSR\\_data\\r1_resData.txt", 
       "D:\\Work\\SSR\\_data\\r2_resData.txt", 
       "D:\\Work\\SSR\\_data\\r3_resData.txt", 
       "D:\\Work\\SSR\\_data\\r4_resData.txt"}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[307.20000000000005`]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 4], "Meta" -> <|"ID" -> 1392188133263294|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[307.20000000000005`]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r1_resData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r2_resData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r3_resData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r4_resData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{355., {75.98764652642421, 84.01235347357579}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{355., {75.98764652642421, 84.01235347357579}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.851563474823532*^9, 
  3.8515634762467976`*^9}},ExpressionUUID->"337a1094-a303-4d20-8401-\
70f8d7307c40"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6d88\:8017", "Section",
 CellChangeTimes->{
  3.808631677265349*^9, {3.80869332707485*^9, 3.808693330648262*^9}, {
   3.8087189665087495`*^9, 3.808718967733144*^9}, {3.833960167790538*^9, 
   3.833960169137002*^9}, {3.834023624697265*^9, 3.834023664681054*^9}, {
   3.8340250206769943`*^9, 3.834025026350839*^9}, {3.834028677224286*^9, 
   3.834028678461182*^9}, {3.8345544512357435`*^9, 3.834554460736314*^9}, {
   3.8347346605450463`*^9, 3.8347346632428493`*^9}, {3.834734780664573*^9, 
   3.8347347824867225`*^9}},ExpressionUUID->"d4f0d880-f379-4917-9d20-\
dac397699f02"],

Cell["\:79ef\:7d2f = \:4ea7\:51fa/\:6d88\:8017 \
\:5206\:6bb5\:51fd\:6570(\:6ce2\:6298)\:ff1a", "Affiliation",
 CellChangeTimes->{{3.808633042792246*^9, 3.8086331084863987`*^9}, {
   3.808719028342112*^9, 3.8087190415453496`*^9}, {3.80878913282475*^9, 
   3.808789133464386*^9}, {3.8087940766025524`*^9, 3.8087941058362556`*^9}, {
   3.8340235613002286`*^9, 3.8340236090069103`*^9}, {3.8340236677878056`*^9, 
   3.8340236697927933`*^9}, 3.834025031631636*^9, {3.8340285143773403`*^9, 
   3.8340285194936504`*^9}, 3.8340286355365624`*^9, {3.8340286717436066`*^9, 
   3.8340287231513677`*^9}, 3.8340292587694736`*^9, {3.834031070094565*^9, 
   3.834031093038456*^9}, {3.8340454091905107`*^9, 3.834045480554221*^9}, {
   3.8340456944288187`*^9, 3.8340457161969275`*^9}, {3.83455519496177*^9, 
   3.8345552305682707`*^9}, {3.8346377211701026`*^9, 
   3.8346377452428017`*^9}, {3.8347356610440426`*^9, 3.8347356859488993`*^9}, 
   3.834735725980131*^9, {3.8347363739756975`*^9, 3.834736377291621*^9}, {
   3.8347364254369497`*^9, 3.8347364286341176`*^9}, {3.851550716585182*^9, 
   3.851550717525073*^9}, {3.851552439868556*^9, 
   3.8515524446682014`*^9}},ExpressionUUID->"6f928502-489e-4855-841d-\
a48de2c84591"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "resGetData", ",", "resConsumeConfig", ",", "funcsAccumulate", ",", 
    "resAccumulate", ",", "resConsume", ",", "consumeData"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"resGetData", "=", " ", 
   RowBox[{"Association", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"SemanticImport", "[", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dataPath", ",", 
            RowBox[{"#", "<>", "\"\<_\>\"", "<>", "\"\<resData.txt\>\""}]}], 
           "}"}], "]"}], "]"}]}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<r1\>\"", ",", "\"\<r2\>\"", ",", "\"\<r3\>\"", ",", 
        "\"\<r4\>\""}], "}"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"resConsumeConfig", " ", "=", " ", 
   RowBox[{"Association", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"Base`excleData", "[", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Directory", "[", "]"}], ",", "\"\<main.xlsx\>\""}], 
            "}"}], "]"}], ",", "\"\<resource\>\"", ",", "#"}], "]"}]}], "&"}],
       "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<r1\>\"", ",", "\"\<r2\>\"", ",", "\"\<r3\>\"", ",", 
        "\"\<r4\>\""}], "}"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"funcsAccumulate", " ", "=", "  ", 
   RowBox[{"Association", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Fit", "[", 
             RowBox[{
              RowBox[{"Normal", "/@", 
               RowBox[{"Values", "/@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"resConsumeConfig", "[", "#", "]"}], "[", 
                   RowBox[{"n", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<lv\>\"", ",", "\"\<accumulate\>\""}], 
                    "}"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"resConsumeConfig", "[", "#", "]"}], "[", 
                   RowBox[{
                    RowBox[{"n", "+", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<lv\>\"", ",", "\"\<accumulate\>\""}], 
                    "}"}]}], "]"}]}], "}"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "@", "consumeconfig"}], "-", "1"}]}], 
             "}"}]}], "]"}], ",", "x"}], "]"}]}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<r1\>\"", ",", "\"\<r2\>\"", ",", "\"\<r3\>\"", ",", 
        "\"\<r4\>\""}], "}"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resAccumulate", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"funcsAccumulate", "[", "type", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"Base`excleIndex", "[", 
       RowBox[{
        RowBox[{"resConsumeConfig", "[", "type", "]"}], ",", 
        RowBox[{"\"\<lv\>\"", "\[Rule]", " ", "lv"}]}], "]"}], "]"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "lv"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resConsume", "[", 
    RowBox[{"type_", ",", "lv_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Last", "@", 
      RowBox[{"Accumulate", "@", 
       RowBox[{"Normal", "@", 
        RowBox[{
         RowBox[{"resGetData", "[", "type", "]"}], "[", 
         RowBox[{
          RowBox[{"Range", "[", "lv", "]"}], ",", 
          RowBox[{
           RowBox[{"#productTotal", "+", "#collectTotal", "+", 
            RowBox[{"#baseTime", "*", "#other"}]}], "&"}]}], "]"}]}]}]}], 
     ")"}], "/", 
    RowBox[{"resAccumulate", "[", 
     RowBox[{"type", ",", "lv"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"consumeData", "[", 
    RowBox[{"type_String", ",", "lv_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"output", " ", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Values", "@", 
          RowBox[{"resGetByLv", "[", 
           RowBox[{"type", ",", "lv"}], "]"}]}]}]}], ",", " ", 
       RowBox[{"base", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lv", "\[LessEqual]", "1"}], ",", 
          RowBox[{"resConsume", "[", 
           RowBox[{"type", ",", "1"}], "]"}], ",", 
          RowBox[{
           RowBox[{"resConsume", "[", 
            RowBox[{"type", ",", "lv"}], "]"}], "-", 
           RowBox[{"resConsume", "[", 
            RowBox[{"type", ",", 
             RowBox[{"lv", "-", "1"}]}], "]"}]}]}], "]"}]}], ",", 
       RowBox[{"config", "=", 
        RowBox[{"resConsumeConfig", "[", "type", "]"}]}]}], "}"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<lv\>\"", "\[Rule]", " ", "lv"}], ",", 
       RowBox[{"\"\<output\>\"", "\[Rule]", "output"}], ",", 
       RowBox[{"\"\<base\>\"", "\[Rule]", " ", "base"}], ",", 
       RowBox[{"\"\<accumulate\>\"", "\[Rule]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"base", "\[Equal]", "0"}], ",", "0", ",", 
          RowBox[{"output", "/", "base"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "\[Rule]", 
           RowBox[{"base", "*", 
            RowBox[{"Base`excleLookUp", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"config", ",", 
                RowBox[{"\"\<lv\>\"", "\[Rule]", " ", "lv"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"config", ",", "#"}], "}"}]}], "]"}]}]}], ")"}], "&"}],
         "/@", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"config", "[", 
           RowBox[{"First", ",", "Keys"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;"}], "]"}], "]"}]}]}], "|>"}]}], "]"}]}], 
  ";"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.8086321191192493`*^9, 3.8086321229284706`*^9}, {
   3.808650966346627*^9, 3.808651027259164*^9}, {3.8086552496278596`*^9, 
   3.8086552898557644`*^9}, {3.80865537466228*^9, 3.808655432070145*^9}, {
   3.808655475568187*^9, 3.808655499291773*^9}, {3.8086555458233986`*^9, 
   3.8086555470780134`*^9}, {3.808655592329652*^9, 3.8086556007401743`*^9}, {
   3.808655695441067*^9, 3.8086557544796934`*^9}, {3.8086558038377166`*^9, 
   3.808655838970436*^9}, {3.808655972399808*^9, 3.8086560475529747`*^9}, {
   3.808656126757228*^9, 3.8086561550829725`*^9}, {3.8086561853400106`*^9, 
   3.808656208164997*^9}, {3.808656294727317*^9, 3.808656315726019*^9}, {
   3.8086563601291018`*^9, 3.8086563670051336`*^9}, {3.808656402343069*^9, 
   3.8086564422063446`*^9}, {3.80865647256328*^9, 3.8086565039427433`*^9}, 
   3.808693943142417*^9, 3.8086939812742405`*^9, {3.8086941292264895`*^9, 
   3.8086941557148285`*^9}, 3.808694789403946*^9, {3.8086948771999826`*^9, 
   3.8086949488136897`*^9}, {3.8086950060734615`*^9, 3.808695028325946*^9}, {
   3.8086951385725393`*^9, 3.8086951498989315`*^9}, {3.8086957871964264`*^9, 
   3.8086958013317766`*^9}, {3.808695880875601*^9, 3.8086958893147945`*^9}, {
   3.8087150097141085`*^9, 3.8087151161769676`*^9}, {3.808715458109768*^9, 
   3.808715535392779*^9}, {3.8087155814522476`*^9, 3.8087155987644787`*^9}, {
   3.8087163438570256`*^9, 3.808716403476448*^9}, {3.8087167678683624`*^9, 
   3.8087169939172115`*^9}, {3.8087186170036573`*^9, 3.808718633111721*^9}, 
   3.808734826202589*^9, 3.808734905516019*^9, {3.808735034704901*^9, 
   3.808735047274339*^9}, {3.8087357144577036`*^9, 3.8087357585315804`*^9}, {
   3.8087358720045915`*^9, 3.808735876612048*^9}, {3.8087361042341127`*^9, 
   3.8087361056867275`*^9}, {3.8087362364854217`*^9, 3.808736236865576*^9}, 
   3.808736814246451*^9, {3.808736871962551*^9, 3.8087368832489142`*^9}, {
   3.8087824541772947`*^9, 3.808782511253625*^9}, 3.8087825441370564`*^9, {
   3.808782672963166*^9, 3.8087827019682374`*^9}, {3.8087828822104807`*^9, 
   3.808782967618992*^9}, {3.8087830143540063`*^9, 3.8087830262921753`*^9}, {
   3.8087830950311084`*^9, 3.8087831237733526`*^9}, {3.808783163152711*^9, 
   3.8087832349264655`*^9}, {3.808783274135768*^9, 3.808783276407037*^9}, {
   3.8087834177388306`*^9, 3.8087834305390196`*^9}, {3.8087835748694572`*^9, 
   3.8087835988112836`*^9}, {3.808783693884592*^9, 3.808783694240699*^9}, {
   3.808783757819089*^9, 3.808783761486614*^9}, {3.808784187708847*^9, 
   3.8087842823208647`*^9}, {3.808784396701518*^9, 3.808784434559076*^9}, {
   3.8087860534784064`*^9, 3.8087861892518363`*^9}, 3.80878631748376*^9, {
   3.8087863617633*^9, 3.8087863773516455`*^9}, {3.808786966175229*^9, 
   3.8087870343976316`*^9}, {3.808787162230459*^9, 3.808787184186225*^9}, {
   3.8087872706611805`*^9, 3.808787271630118*^9}, {3.8087878049869404`*^9, 
   3.8087878064011087`*^9}, {3.808787877410733*^9, 3.80878792222486*^9}, 
   3.8087882749203253`*^9, {3.808788682638295*^9, 3.8087886892430906`*^9}, {
   3.808788813989341*^9, 3.808788861154708*^9}, {3.8087889386138163`*^9, 
   3.8087889460344505`*^9}, {3.8087889767235775`*^9, 
   3.8087889908657455`*^9}, {3.8087890237011805`*^9, 
   3.8087890246578636`*^9}, {3.8087892753318157`*^9, 
   3.8087892937379475`*^9}, {3.808794113351554*^9, 3.808794115070833*^9}, {
   3.8087950063266764`*^9, 3.808795140372967*^9}, {3.8087973153549423`*^9, 
   3.808797363577663*^9}, {3.808797517047597*^9, 3.8087975173107147`*^9}, 
   3.8087975600950856`*^9, {3.80879771359706*^9, 3.8087977185001793`*^9}, {
   3.808797833497653*^9, 3.808797833816798*^9}, 3.8087984176579385`*^9, {
   3.8087985412618732`*^9, 3.8087985449656477`*^9}, {3.8087986205270667`*^9, 
   3.8087986326049337`*^9}, {3.8087987138967123`*^9, 
   3.8087987198139687`*^9}, {3.808799485451124*^9, 3.8087995298233404`*^9}, {
   3.8087996988355837`*^9, 3.80879971621819*^9}, {3.808800018794944*^9, 
   3.8088000418664613`*^9}, {3.8088032703790617`*^9, 3.8088032743211412`*^9},
    {3.8088033107700768`*^9, 3.80880335916182*^9}, {3.8088036696407137`*^9, 
   3.8088037177743144`*^9}, {3.808803889874916*^9, 3.8088038901112504`*^9}, {
   3.8088041341127057`*^9, 3.8088041342563257`*^9}, {3.808804860542604*^9, 
   3.8088048878019075`*^9}, {3.8091477426832285`*^9, 
   3.8091477875926867`*^9}, {3.8130210923923683`*^9, 
   3.8130210971355553`*^9}, {3.813021134698643*^9, 3.8130211360926027`*^9}, 
   3.813021276644721*^9, 3.813021798109539*^9, {3.8130226391712265`*^9, 
   3.8130226392888823`*^9}, {3.813032888145892*^9, 3.813032888788127*^9}, {
   3.8315896741397753`*^9, 3.8315896985456686`*^9}, {3.8315897307541275`*^9, 
   3.8315897347637963`*^9}, {3.831589902075383*^9, 3.831589928994995*^9}, {
   3.8315900263145123`*^9, 3.8315900372963295`*^9}, {3.83159007364235*^9, 
   3.8315901868170757`*^9}, {3.831590267828146*^9, 3.831590311626197*^9}, {
   3.831765149685164*^9, 3.831765150013067*^9}, {3.83177598734519*^9, 
   3.8317760029776487`*^9}, {3.8317760651051607`*^9, 
   3.8317760731046853`*^9}, {3.8317763096165857`*^9, 3.831776310840356*^9}, {
   3.831776372269432*^9, 3.8317763961600513`*^9}, {3.831776502841998*^9, 
   3.8317765035137653`*^9}, {3.8317785300165915`*^9, 3.8317785367754393`*^9}, 
   3.831780980067283*^9, {3.8321426291906977`*^9, 3.8321426511263604`*^9}, {
   3.8321444626609745`*^9, 3.832144514683178*^9}, {3.832195314259512*^9, 
   3.8321953485228767`*^9}, {3.83219538353137*^9, 3.8321954035794845`*^9}, {
   3.8321954547329693`*^9, 3.832195471829215*^9}, {3.832195561836808*^9, 
   3.832195595299019*^9}, 3.832196181605626*^9, {3.832196473634031*^9, 
   3.8321965248585644`*^9}, {3.832197397030918*^9, 3.8321973989227858`*^9}, {
   3.8321975336605663`*^9, 3.8321975384648385`*^9}, {3.8321976423013983`*^9, 
   3.832197644026271*^9}, {3.832197725926578*^9, 3.8321977285457506`*^9}, 
   3.832197781597249*^9, {3.8321979671080832`*^9, 3.8321979686330786`*^9}, 
   3.8322010377149954`*^9, {3.832201078482271*^9, 3.8322011489054117`*^9}, 
   3.8322011844020615`*^9, {3.83220127275482*^9, 3.832201324626897*^9}, 
   3.832201374168996*^9, {3.8322021362040243`*^9, 3.8322021468577595`*^9}, 
   3.832202223115119*^9, {3.8322023251911855`*^9, 3.832202325336165*^9}, {
   3.8322089574801674`*^9, 3.8322090043690486`*^9}, {3.8322090893931055`*^9, 
   3.8322090926701903`*^9}, {3.832209209944267*^9, 3.832209210046615*^9}, {
   3.8322094605132256`*^9, 3.8322094615604696`*^9}, {3.832209675127907*^9, 
   3.832209675366907*^9}, {3.8328012249525585`*^9, 3.8328012344402733`*^9}, {
   3.832907458459487*^9, 3.832907476802927*^9}, {3.8329075152993965`*^9, 
   3.8329075356103077`*^9}, {3.833324321876432*^9, 3.833324322939667*^9}, {
   3.833324386659212*^9, 3.8333244326172094`*^9}, {3.833324679546693*^9, 
   3.8333246839541135`*^9}, {3.8333247805472326`*^9, 3.833324782803672*^9}, {
   3.8333407147542343`*^9, 3.8333407499688897`*^9}, {3.8333416358952446`*^9, 
   3.8333417023510942`*^9}, {3.8333417995852227`*^9, 
   3.8333418286890726`*^9}, {3.833341931127696*^9, 3.8333419745513*^9}, {
   3.833342075327962*^9, 3.833342080886598*^9}, {3.833342159648266*^9, 
   3.8333424164875603`*^9}, {3.833771327814605*^9, 3.833771397326125*^9}, {
   3.833771450037882*^9, 3.8337715382616177`*^9}, {3.833857992994762*^9, 
   3.833858005168937*^9}, {3.8338581444155884`*^9, 3.833858151080624*^9}, {
   3.8338803656463356`*^9, 3.833880438071907*^9}, {3.8340162323563623`*^9, 
   3.8340163194025507`*^9}, {3.8340163497643375`*^9, 
   3.8340163514895086`*^9}, {3.834016398708268*^9, 3.8340164044324203`*^9}, {
   3.8340167434738884`*^9, 3.8340167457923737`*^9}, {3.8340168956269803`*^9, 
   3.8340169557776303`*^9}, {3.834017003346488*^9, 3.8340170036558795`*^9}, {
   3.834017091530233*^9, 3.834017100608238*^9}, {3.8340171997229366`*^9, 
   3.834017205401269*^9}, 3.8340174626659417`*^9, {3.8340237182775664`*^9, 
   3.8340238347521257`*^9}, {3.834023931972432*^9, 3.834024005925449*^9}, {
   3.834024041893632*^9, 3.834024108098747*^9}, {3.8340241566354713`*^9, 
   3.834024188276352*^9}, {3.83402481833982*^9, 3.8340248423622775`*^9}, {
   3.8340254416768684`*^9, 3.834025445261794*^9}, {3.8340255480117755`*^9, 
   3.834025554524522*^9}, {3.834025606875882*^9, 3.834025779611601*^9}, {
   3.8340258395327168`*^9, 3.834025858481798*^9}, {3.8340261906364975`*^9, 
   3.834026191050025*^9}, {3.834026303196108*^9, 3.8340263438264203`*^9}, {
   3.834026542003769*^9, 3.834026552265226*^9}, {3.8340266036105094`*^9, 
   3.834026657490783*^9}, {3.834028242267047*^9, 3.834028258089897*^9}, {
   3.834029295369621*^9, 3.8340293095364265`*^9}, {3.8340293634962797`*^9, 
   3.834029417496022*^9}, {3.8340294754638367`*^9, 3.834029537527832*^9}, {
   3.834029583201541*^9, 3.8340295881220264`*^9}, 3.834029665217955*^9, {
   3.8340299969612846`*^9, 3.83403001856038*^9}, {3.834030336741947*^9, 
   3.8340303984234533`*^9}, {3.834030452608559*^9, 3.8340304652715015`*^9}, {
   3.8340305094571486`*^9, 3.834030521321596*^9}, 3.8340305974561415`*^9, {
   3.834030687704501*^9, 3.834030716278955*^9}, {3.834030794953179*^9, 
   3.8340309341439195`*^9}, {3.8340310616571293`*^9, 
   3.8340310622301693`*^9}, {3.834031097448662*^9, 3.8340312504804716`*^9}, {
   3.834031284880072*^9, 3.834031312270884*^9}, {3.8340314379432807`*^9, 
   3.834031445646886*^9}, {3.8340316779183755`*^9, 3.8340316843016744`*^9}, {
   3.834031773550215*^9, 3.834031817454095*^9}, {3.8340319684058123`*^9, 
   3.8340319780673113`*^9}, {3.8340326883044624`*^9, 3.834032700125153*^9}, {
   3.8340328329816017`*^9, 3.834032865213583*^9}, {3.8340329081902523`*^9, 
   3.834032911333645*^9}, {3.8340338754529643`*^9, 3.8340339247649794`*^9}, {
   3.8340339591572027`*^9, 3.834034049142331*^9}, {3.8340340794695497`*^9, 
   3.8340340888627543`*^9}, {3.8340341427495265`*^9, 3.834034266629222*^9}, {
   3.834034355196986*^9, 3.8340343719594836`*^9}, {3.8340344056468735`*^9, 
   3.834034413116949*^9}, {3.8340344567911587`*^9, 3.83403447638811*^9}, {
   3.834034551102846*^9, 3.8340346348204064`*^9}, {3.83403523478255*^9, 
   3.8340353022774067`*^9}, {3.834035385638688*^9, 3.8340354048757277`*^9}, {
   3.8340354617554655`*^9, 3.8340354687084055`*^9}, {3.834035515899887*^9, 
   3.8340355171106253`*^9}, {3.8340355683421335`*^9, 
   3.8340357868690977`*^9}, {3.83403586878113*^9, 3.834035875411933*^9}, 
   3.834035912941086*^9, {3.8340431029034953`*^9, 3.8340431232147274`*^9}, {
   3.8340431596226673`*^9, 3.8340431735748305`*^9}, {3.8340432082477307`*^9, 
   3.834043219402212*^9}, {3.834043305216717*^9, 3.8340433077214375`*^9}, {
   3.834043405472602*^9, 3.834043405614123*^9}, {3.8340444650242434`*^9, 
   3.8340444652638707`*^9}, {3.8340448449997883`*^9, 
   3.8340448508776827`*^9}, {3.8340453727031794`*^9, 3.83404539426145*^9}, {
   3.834045597817757*^9, 3.8340456100059147`*^9}, {3.834045659387438*^9, 
   3.834045670341997*^9}, {3.8340457719830236`*^9, 3.8340458038304296`*^9}, {
   3.8340458397615213`*^9, 3.8340458400611534`*^9}, {3.834097278406023*^9, 
   3.8340973990492563`*^9}, {3.8340974292443657`*^9, 3.83409744718745*^9}, {
   3.834097571164959*^9, 3.8340976341630955`*^9}, {3.8340980713474927`*^9, 
   3.8340980804689984`*^9}, {3.8341087460059614`*^9, 
   3.8341087610917273`*^9}, {3.8342055464142356`*^9, 3.834205559997295*^9}, {
   3.834272803426153*^9, 3.8342728612803774`*^9}, {3.834273218419854*^9, 
   3.8342732473533096`*^9}, {3.8342733264925303`*^9, 
   3.8342733393047934`*^9}, {3.834273375001859*^9, 3.8342733767283444`*^9}, {
   3.8342734213692436`*^9, 3.834273441808498*^9}, {3.834273503208662*^9, 
   3.8342736612411804`*^9}, {3.8342736999783864`*^9, 3.834273736601621*^9}, {
   3.834273778858473*^9, 3.834273813312028*^9}, {3.834273846145933*^9, 
   3.83427384815994*^9}, {3.8342799652957444`*^9, 3.83428000794035*^9}, {
   3.8342801639424953`*^9, 3.8342802144287567`*^9}, {3.83428326282796*^9, 
   3.834283288802761*^9}, {3.834284776515091*^9, 3.834284777025178*^9}, {
   3.834549201616341*^9, 3.8345492045482793`*^9}, {3.8345552623389277`*^9, 
   3.8345552985704637`*^9}, {3.834555611873389*^9, 3.8345556196003346`*^9}, {
   3.8345619376853313`*^9, 3.8345619437561536`*^9}, {3.8345621188719416`*^9, 
   3.834562150188419*^9}, {3.834562226955327*^9, 3.834562245659159*^9}, {
   3.83456228713326*^9, 3.8345623222598205`*^9}, {3.834563349142085*^9, 
   3.8345634510826955`*^9}, 3.8345635123707952`*^9, {3.8345639343499455`*^9, 
   3.8345639426599784`*^9}, {3.8345656039807005`*^9, 
   3.8345656786602325`*^9}, {3.8345657101645994`*^9, 3.834565712250552*^9}, {
   3.8345657463553624`*^9, 3.8345658016443567`*^9}, {3.834565838196368*^9, 
   3.8345659514265594`*^9}, {3.8345660408179827`*^9, 3.834566130353927*^9}, {
   3.834566246700873*^9, 3.834566250345869*^9}, {3.8345671021789017`*^9, 
   3.834567113750271*^9}, {3.8346369312683372`*^9, 3.8346370264825*^9}, {
   3.834637181082836*^9, 3.83463722757082*^9}, {3.834637307820859*^9, 
   3.8346373093702745`*^9}, {3.834637346580366*^9, 3.8346373774501033`*^9}, {
   3.834637445676406*^9, 3.8346374479785585`*^9}, {3.8346376976682796`*^9, 
   3.834637718314373*^9}, {3.834637749243888*^9, 3.8346377630424447`*^9}, {
   3.8346378715482235`*^9, 3.83463794337035*^9}, {3.8346379907469053`*^9, 
   3.8346381049464417`*^9}, {3.834639271635438*^9, 3.8346392736507792`*^9}, {
   3.8346393604609814`*^9, 3.834639371385722*^9}, {3.8346394049307117`*^9, 
   3.834639408272534*^9}, {3.8346397401615496`*^9, 3.83463974740961*^9}, {
   3.8346398362185593`*^9, 3.8346398422326736`*^9}, {3.834639937905448*^9, 
   3.834639968394347*^9}, 3.8346400522670813`*^9, {3.8346400841995907`*^9, 
   3.8346401020250216`*^9}, {3.8346401385220103`*^9, 3.8346401669088287`*^9}, 
   3.834640344593603*^9, 3.8346403957734046`*^9, {3.8346404689706173`*^9, 
   3.8346405028408995`*^9}, {3.8346405989471436`*^9, 3.834640631736794*^9}, {
   3.8347008550670543`*^9, 3.8347008588545437`*^9}, {3.8347196288110456`*^9, 
   3.8347196308097925`*^9}, {3.8347199966705537`*^9, 
   3.8347199990736732`*^9}, {3.834723477104761*^9, 3.834723483231531*^9}, {
   3.8347386600875864`*^9, 3.834738698382214*^9}, 3.83478769367809*^9, {
   3.834787863582599*^9, 3.834787956647998*^9}, {3.8347882886373873`*^9, 
   3.8347882936124554`*^9}, {3.8347885151874857`*^9, 
   3.8347885596776705`*^9}, {3.8347886802955008`*^9, 3.834788684075861*^9}, {
   3.8347888182130075`*^9, 3.834788876172039*^9}, {3.8347889419336967`*^9, 
   3.8347890124457874`*^9}, {3.8347891714631443`*^9, 3.834789175538472*^9}, {
   3.8347900498311357`*^9, 3.834790064577897*^9}, {3.8347904100334387`*^9, 
   3.8347904214973984`*^9}, {3.8347907687860565`*^9, 
   3.8347908469084044`*^9}, {3.834790888466552*^9, 3.8347909179277735`*^9}, {
   3.834791042141224*^9, 3.834791044929365*^9}, {3.834791142641819*^9, 
   3.834791143636861*^9}, {3.834791694578246*^9, 3.8347916959877276`*^9}, {
   3.834801078916258*^9, 3.8348011052347045`*^9}, {3.8348092104853888`*^9, 
   3.834809267236092*^9}, {3.8348094259061656`*^9, 3.8348094528358345`*^9}, {
   3.8348097333430057`*^9, 3.8348098713654804`*^9}, 3.8348148008632116`*^9, {
   3.8348148486098824`*^9, 3.8348148623630095`*^9}, {3.8348148985837865`*^9, 
   3.8348148988337393`*^9}, {3.8370588929923687`*^9, 
   3.8370588937035165`*^9}, {3.837059322633898*^9, 3.8370593235505238`*^9}, {
   3.838087116685796*^9, 3.8380872327016363`*^9}, {3.838087264766367*^9, 
   3.838087300550353*^9}, {3.8380873779997387`*^9, 3.83808741842002*^9}, {
   3.838087449292708*^9, 3.838087732940298*^9}, {3.83808785444702*^9, 
   3.8380878554442315`*^9}, {3.838087889925744*^9, 3.8380878903080072`*^9}, {
   3.8380924284681168`*^9, 3.838092454855237*^9}, {3.8380950300531034`*^9, 
   3.8380950454029245`*^9}, {3.8380956057330046`*^9, 3.83809562172429*^9}, {
   3.8380958970524874`*^9, 3.838095905530593*^9}, 3.838095971165306*^9, {
   3.851488759654339*^9, 3.851488763389024*^9}, {3.851488796436612*^9, 
   3.8514888123086014`*^9}, {3.8514918868509245`*^9, 3.85149200798785*^9}, {
   3.851492106465375*^9, 3.8514921190990815`*^9}, {3.8514921539929423`*^9, 
   3.851492167427498*^9}, {3.8514922250443144`*^9, 3.8514922933387084`*^9}, {
   3.851492468429016*^9, 3.851492484667574*^9}, {3.8515497991532087`*^9, 
   3.851549827240279*^9}, {3.8515506630073404`*^9, 3.8515506699514637`*^9}, {
   3.851551963383195*^9, 3.851551963854437*^9}, {3.8515521924470787`*^9, 
   3.851552242516934*^9}, {3.851552357829335*^9, 3.851552374293641*^9}, {
   3.851552454789543*^9, 3.8515525247659655`*^9}, {3.8515528976535587`*^9, 
   3.851552925869624*^9}, {3.8515530230621815`*^9, 3.851553025061289*^9}, {
   3.851553226638706*^9, 3.851553254436577*^9}, {3.851563588864472*^9, 
   3.8515636364329453`*^9}, {3.8515639196077557`*^9, 3.851563935797228*^9}, {
   3.8515639931201344`*^9, 3.8515640538002305`*^9}, {3.85156409805649*^9, 
   3.851564126929057*^9}, {3.851564209128344*^9, 3.8515642558874545`*^9}, {
   3.851564299802168*^9, 3.851564308168358*^9}, {3.8515643470564938`*^9, 
   3.8515643828237267`*^9}, {3.851564638040761*^9, 3.851564721063311*^9}, {
   3.851564804465381*^9, 3.851564805919587*^9}, {3.85156495935951*^9, 
   3.8515650429831595`*^9}, {3.851566043047986*^9, 3.8515661139361153`*^9}, {
   3.851566288382989*^9, 3.8515662911586246`*^9}, {3.8515663559270153`*^9, 
   3.851566370054183*^9}, {3.8515665609986515`*^9, 3.851566571526308*^9}, {
   3.851566609334999*^9, 3.851566638703243*^9}, {3.8515666812393684`*^9, 
   3.8515668000298915`*^9}, {3.851567017335146*^9, 3.8515670596303988`*^9}, 
   3.851567101239993*^9, 3.8515674183896465`*^9, {3.851567655960494*^9, 
   3.851567657669506*^9}, 3.8515677126587043`*^9, {3.85156776137348*^9, 
   3.85156776603752*^9}, {3.8515678688307433`*^9, 3.851567887966258*^9}, {
   3.8515698590867357`*^9, 3.8515698722700663`*^9}, 3.851569912613258*^9},
 CellLabel->
  "In[1077]:=",ExpressionUUID->"601e8329-1cca-4f33-a9e6-15386b811ee8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"resAccumulate", "[", 
         RowBox[{"\"\<r1\>\"", ",", "n"}], "]"}], ",", 
        RowBox[{
         RowBox[{"consumeData", "[", 
          RowBox[{"\"\<r1\>\"", ",", "n"}], "]"}], "[", "\"\<accumulate\>\"", 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\:7d2f\:79ef\>\"", ",", "\"\<Lv\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8515671255899224`*^9, 3.851567182788714*^9}, {
  3.8515676132790813`*^9, 3.851567619694517*^9}, {3.8515677173740683`*^9, 
  3.8515677599965553`*^9}, {3.8515685780290036`*^9, 3.8515686379491014`*^9}, {
  3.8515696221970625`*^9, 3.8515696466055875`*^9}, {3.8515696901168623`*^9, 
  3.8515697013578405`*^9}, {3.851569735709979*^9, 3.8515697640294876`*^9}, {
  3.8515697953659425`*^9, 3.851569828820915*^9}, {3.851569923860829*^9, 
  3.8515699410692263`*^9}},
 CellLabel->
  "In[1084]:=",ExpressionUUID->"c84802c9-0696-4e97-8b1b-289043d5334c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEf7FFpBocCmeOFMsc/QvkcDh7zv3jO/wLjCzgo
KIHAJyhfxOHnEv9fS/xhfAmHi+q1l9RrYXwZh5WrQADGV3Bo1L3RpHsDxldy
iNzAGr2B9TOUr+JgaAwCML6aQ9PrwB1yrTC+hsOVxQW2XNdhfC0HtZj+Q181
vkD5Og4VIuvcH1bB+HoOp86AAIxvgCZviKbfCM18YzT7TRwMUNxn6tAN1B3T
D/OPmcNzkPLXsPAyd3B5WAW0Eca3cFgAMn4xLLwtHX78B4H3UL6Vwzag7sAd
76B8awew8oK3UL6NgwbYvW+gfFuHRyDjH76C8u0c5swEgZdQvr3DKneQA55D
+Q4O+0DOPfQUwm9wcLgE9u9jqLyjwwuw+x/aAwA1XZ7h
         "]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEf7FFpBofGpcVbl3J/gvI5HJzcLh66ygXjCzhc
18mbtNkRxhdxMJV5Kf+sGMaXcDCcnfx61VIYX8bhf/FC84ILML6Cw0kNubp2
9s9QvpKDkumsCVWmML6KQ/MKM65n6TC+mkOjwPEU508wvoZDVij38ceBX6B8
LYdl2ieu83fB+DoOof+WW9T+hvH1HJiNPRKt0r9C+QYO33POnNb8DjPP0CFY
eGrRjU4Y38jhwMN0vW0KML6xw5vesmVVu2DuN3GQE+BbdTgJxjd12Cpc2/ZW
8COUb+bQ+KvDws4EFp7mDs/mrpO02/0OyrdwSPmlVN8j9RbKt3QQnd71x7jl
NZRv5fCsYUPJv4JXUL61w8TAs6duXn4B5ds4ON2Rmfjc6TmUb+uge6yLrXvn
UyjfzuFw+Ky6SxZPoHx7B3dm8bKDiQ+gfAeHpS+5vj+5dAfCb3Bw2L5wyiob
nptQeUcHCfZb9ssyr9oDANRRm30=
         "]]}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 34.}, {0, 1.337702159889148}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\:7d2f\:79ef\"", "\"Lv\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.851568605809308*^9, 3.8515696721785336`*^9, 3.851569716504706*^9, {
   3.8515697551786566`*^9, 3.851569779303664*^9}, 3.851569956399044*^9},
 CellLabel->
  "Out[1084]=",ExpressionUUID->"71b49acf-c761-4ebe-918e-2ba4a28d2393"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"dataPath", ",", 
        RowBox[{"#", "<>", "\"\<_\>\"", "<>", "\"\<consumeData.txt\>\""}]}], 
       "}"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"consumeData", "[", 
         RowBox[{"#", ",", "n"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"maxLv", "-", "1"}]}], "}"}]}], "]"}], "//", "Dataset"}], 
     ",", "\"\<Table\>\""}], "]"}], "&"}], "/@", 
  RowBox[{"resconfig", "[", 
   RowBox[{"All", ",", "\"\<type\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.838084351689721*^9, 3.8380844098214025`*^9}, {
   3.83808790149411*^9, 3.838087916760415*^9}, {3.8514887540458894`*^9, 
   3.8514887544362135`*^9}, 3.851492354116615*^9, {3.8514924099167223`*^9, 
   3.8514924100515604`*^9}},
 CellLabel->
  "In[1086]:=",ExpressionUUID->"9c590f72-610c-4774-8135-d1cdc5d2999e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "D:\\Work\\SSR\\_data\\r1_consumeData.txt", 
       "D:\\Work\\SSR\\_data\\r2_consumeData.txt", 
       "D:\\Work\\SSR\\_data\\r3_consumeData.txt", 
       "D:\\Work\\SSR\\_data\\r4_consumeData.txt"}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[345.6]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 4], "Meta" -> <|"ID" -> 1563939580470045|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[345.6]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r1_consumeData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r2_consumeData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r3_consumeData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["D:\\Work\\SSR\\_data\\r4_consumeData.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{360., {75.98764652642421, 84.01235347357579}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{360., {75.98764652642421, 84.01235347357579}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.851492361180676*^9, 3.851492416971704*^9, 
  3.851492497924556*^9, 3.851550681632886*^9, 3.851551764520461*^9, 
  3.851565240760642*^9, 3.851568187749333*^9, 3.8515700038676295`*^9, 
  3.8515700771422195`*^9},
 CellLabel->
  "Out[1086]=",ExpressionUUID->"c3934218-3af0-4e26-ba57-2802ba257445"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->"Global`",
Magnification:>1.4 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"50143bfa-c63e-46e1-b332-9d1acba140d3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 390, 6, 44, "Affiliation",ExpressionUUID->"68931959-5198-403f-8f48-7da78c592e79"],
Cell[951, 28, 1207, 21, 70, "Code",ExpressionUUID->"5d8076fb-28eb-40a2-aa1d-d7d3d9da2897",
 InitializationCell->True],
Cell[2161, 51, 160, 3, 44, "Affiliation",ExpressionUUID->"a2a0f4da-9391-44ab-9818-2c84b253e65d"],
Cell[CellGroupData[{
Cell[2346, 58, 1210, 22, 95, "Code",ExpressionUUID->"40d8d0d1-5b64-4fda-9c6f-43838140d950",
 InitializationCell->True],
Cell[3559, 82, 614, 11, 45, "Output",ExpressionUUID->"3c1064e8-9b8b-466d-99b6-89d90a7f21c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4210, 98, 491, 8, 93, "Section",ExpressionUUID->"2ab2737c-7744-467c-a547-4d2efe5a5f3b"],
Cell[4704, 108, 1139, 18, 78, "Affiliation",ExpressionUUID->"7c6e7bb4-2be5-4f3d-aca3-d318ea8712ea"],
Cell[5846, 128, 16613, 286, 218, "Code",ExpressionUUID->"0e311547-904f-42d5-b21b-30f5cca2c203",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[22484, 418, 638, 14, 60, "Input",ExpressionUUID->"68e72ae8-258e-4320-a340-ad269e518a43"],
Cell[23125, 434, 2397, 56, 329, "Output",ExpressionUUID->"3201d822-12c6-4d4c-ba41-4f901036405b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25571, 496, 534, 9, 93, "Section",ExpressionUUID->"c91716a4-2520-456b-a1b4-a60f5299bc97"],
Cell[26108, 507, 926, 13, 44, "Affiliation",ExpressionUUID->"ab9e8ac3-4e22-46de-a7ca-37dce599df0e"],
Cell[27037, 522, 20913, 362, 243, "Code",ExpressionUUID->"4a4dad22-b847-4248-bf21-c4aca9c0ebfd",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[47975, 888, 2070, 57, 217, "Input",ExpressionUUID->"a2045ff1-ad50-46d5-9441-e1b9985d643b"],
Cell[50048, 947, 18730, 411, 357, "Output",ExpressionUUID->"b4ea93b9-02c7-48dd-8388-031266b51895"]
}, Open  ]],
Cell[68793, 1361, 154, 3, 39, "Input",ExpressionUUID->"10f4528d-9fb6-45c3-9402-127e64e69e26"],
Cell[68950, 1366, 1764, 40, 193, "Input",ExpressionUUID->"17535524-2c82-4935-b572-a87b1d26968e"],
Cell[CellGroupData[{
Cell[70739, 1410, 622, 12, 39, "Input",ExpressionUUID->"cbc4f668-137a-4b40-8581-c61ec82aeefa"],
Cell[71364, 1424, 310, 5, 45, "Output",ExpressionUUID->"4c901f89-d36e-4a8e-8ae1-00fb8e1ac1e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71723, 1435, 531, 9, 93, "Section",ExpressionUUID->"38a9e33f-4f0a-4878-8a60-fcfcc0b9926c"],
Cell[72257, 1446, 1176, 18, 44, "Affiliation",ExpressionUUID->"4f362f64-c316-4f33-8411-a01983d48f93"],
Cell[73436, 1466, 22596, 389, 267, "Code",ExpressionUUID->"fdc5da16-b3b7-4fc3-a644-7103ac4e530c",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[96069, 1860, 643, 10, 93, "Section",ExpressionUUID->"5e15d108-08b4-4973-8cb0-0d390fc45606"],
Cell[96715, 1872, 25178, 419, 144, "Code",ExpressionUUID->"be4e234e-e8f6-401c-a2bc-8e36c962d6ad",
 InitializationCell->True],
Cell[121896, 2293, 930, 25, 110, "Input",ExpressionUUID->"a12ea9f3-a2a8-487a-be89-61e48bfca4a0"],
Cell[122829, 2320, 22044, 385, 180, "Input",ExpressionUUID->"337a1094-a303-4d20-8401-70f8d7307c40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144910, 2710, 582, 9, 93, "Section",ExpressionUUID->"d4f0d880-f379-4917-9d20-dac397699f02"],
Cell[145495, 2721, 1209, 17, 44, "Affiliation",ExpressionUUID->"6f928502-489e-4855-841d-a48de2c84591"],
Cell[146707, 2740, 24017, 414, 218, "Code",ExpressionUUID->"601e8329-1cca-4f33-a9e6-15386b811ee8",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[170749, 3158, 1244, 29, 116, "Input",ExpressionUUID->"c84802c9-0696-4e97-8b1b-289043d5334c"],
Cell[171996, 3189, 13711, 295, 353, "Output",ExpressionUUID->"71b49acf-c761-4ebe-918e-2ba4a28d2393"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185744, 3489, 1017, 26, 110, "Input",ExpressionUUID->"9c590f72-610c-4774-8135-d1cdc5d2999e"],
Cell[186764, 3517, 22180, 388, 185, "Output",ExpressionUUID->"c3934218-3af0-4e26-ba57-2802ba257445"]
}, Open  ]]
}, Open  ]]
}
]
*)

